theory OTEEODT begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: adec/2, aenc/2, decode_server_hint/2, derive_secret/2,
           encode_server_hint/2, fst/1, fz/3, h/1, h1/8, h2/2, h3/1, h4/3, hmac/2,
           measure/2, my_g/1, my_g2/2, pair/2, pk/1, read/2, sdec/2, select/1,
           senc/2, sign/2, snd/1, true/0, v/2, verify/3
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    decode_server_hint(key, encode_server_hint(key, hint)) = hint,
    fst(<x.1, x.2>) = x.1,
    fz(v(s, uw), t, uw) = my_g2(s, t),
    measure(pos, measure(pos, prop)) = measure(pos, prop),
    measure(pos, read(pos, prop)) = measure(pos, prop),
    read(pos, read(pos, prop)) = read(pos, prop),
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



heuristic: o "myoracle.py"











rule (modulo E) OTEEDeviceChannel:
   [ !OTEE( $OTEE, $D ), OTEEOut( $OTEE, msg ) ] --> [ DeviceIn( $D, msg ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DeviceOTEEChannel:
   [ !OTEE( $OTEE, $D ), DeviceOut( $D, msg ) ] --> [ OTEEIn( $OTEE, msg ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) AdversaryReadOTEEOut:
   [ !OTEE( $OTEE, $D ), OTEEOut( $OTEE, msg ) ]
  --[ RequireOSCompromise( $D ) ]->
   [ Out( msg ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) AdversaryReadDeviceOut:
   [ !OTEE( $OTEE, $D ), DeviceOut( $D, msg ) ]
  --[ RequireOSCompromise( $D ) ]->
   [ Out( msg ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) AdversaryWriteToOTEE:
   [ !OTEE( $OTEE, $D ), In( msg ) ]
  --[ RequireOSCompromise( $D ) ]->
   [ OTEEIn( $OTEE, msg ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) AdversaryWriteToDevice:
   [ !OTEE( $OTEE, $D ), In( msg ) ]
  --[ RequireOSCompromise( $D ) ]->
   [ DeviceIn( $D, msg ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NO_Init:
   [ Fr( ~ltk ) ]
  --[ InitializeNO( $NO ), InitializeNO_LTK( $NO, ~ltk ) ]->
   [ !NO_Ltk( $NO, ~ltk ), !NO_Pk( $NO, pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Device_Init:
   [ ] --> [ !Device( $D ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NO_Register_OTEE_On_Device:
   [ !Device( $D ), !NO_Ltk( $NO, NO_ltk ), Fr( ~OTEE_ltk ) ]
  --[
  OTEERegisteredOnDevice( $NO, $OTEE, $D ), Unique( <$NO, $D> ),
  Unique( $OTEE )
  ]->
   [
   !OTEE_Ltk( $OTEE, ~OTEE_ltk ), !OTEE_Pk( $OTEE, pk(~OTEE_ltk) ),
   !OTEE( $OTEE, $D ),
   Out( <$OTEE, pk(~OTEE_ltk), sign(<$OTEE, pk(~OTEE_ltk)>, NO_ltk)> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Compromise_Device:
   [ !Device( $D ) ] --[ OSCompromise( $D ) ]-> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Threat_Actor_Init:
   [ Fr( ~ltk ) ]
  --[
  ThreatActorInitialized( $TA ), ThreatActorLTK( $TA, ~ltk ),
  ThreatActorPK( $TA, pk(~ltk) )
  ]->
   [ !TA_Ltk( $TA, ~ltk ), !TA_Pk( $TA, pk(~ltk) ), Out( pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Threat_Actor_Create_Agent:
   [ !TA_Ltk( $TA, ~ltk ), Fr( ~prop ) ]
  --[ ThreatActorCreateAgent( $TA, $A, ~prop ) ]->
   [ Threat_Actor_0( $TA, ~prop, $A, ~ltk ), !Agent( $A, ~prop, pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Adversary_Create_Agent:
   [ In( <prop, adv_srv_pk> ) ]
  --[ AdversaryCreateAgent( $A, prop ) ]->
   [ !Agent( $A, prop, adv_srv_pk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Adversary_Extract_Agent_Properties:
   [ !Agent( $A, prop, server_pk ), In( positions ) ]
  --[ AdversaryExtractAgentProperties( $A, prop ) ]->
   [ Out( read(positions, prop) ) ]

  /*
  rule (modulo AC) Adversary_Extract_Agent_Properties:
     [ !Agent( $A, prop, server_pk ), In( positions ) ]
    --[ AdversaryExtractAgentProperties( $A, prop ) ]->
     [ Out( read(positions, x) ) ]
    variants (modulo AC)
    1. positions
             = positions.14
       prop  = read(positions.14, x.19)
       x     = x.19

    2. prop  = prop.11
       x     = prop.11
  */

rule (modulo E) Device_Run_Agent:
   [ !Device( $D ), !Agent( $A, prop, server_pk ), Fr( ~agent_id ) ]
  --[ DeviceStartRunningAgent( ~agent_id, $A, $D ) ]->
   [ Agent_1( ~agent_id, $A, $D, prop, server_pk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Agent_Start_TLS_Connection:
   [ Agent_1( ~agent_id, $A, $D, prop, server_pk ), Fr( ~ctid ) ]
  --[ DeviceStartTLS( $D, ~ctid ) ]->
   [
   Agent_2( ~agent_id, $A, $D, prop, server_pk ),
   Device_0( ~ctid, $D, ~agent_id, $A, server_pk )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Device_Call_OTEE_Client_Hello:
   [ Device_0( ~ctid, $D, ~agent_id, $A, server_pk ), !OTEE( $OTEE, $D ) ]
  --[ DeviceHello( $D, $A, $OTEE ) ]->
   [
   Device_1( ~ctid, $D, $OTEE, ~agent_id, $A, server_pk ),
   DeviceOut( $D, <~ctid, 'call_hello', server_pk> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) OTEE_Client_Hello:
   [
   !OTEE( $OTEE, $D ), OTEEIn( $OTEE, <ctid, 'call_hello', server_pk> ),
   Fr( ~u ), Fr( ~x_0 ), Fr( ~tee_id )
   ]
  --[
  OTEEStartThread( ~tee_id ), OTEEHello( $OTEE, $D, ~u ),
  OTEEHelloDH( $OTEE, $D, ~x_0 ), OTEEHelloDHinv( $OTEE, $D, inv(~x_0) ),
  OTEEHelloDHg( $OTEE, $D, 'g'^~x_0 ), OTEESession( $OTEE, ~u )
  ]->
   [
   OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, server_pk ),
   OTEEOut( $OTEE, <~tee_id, ctid, 'OTEE_hello', ~u, 'g'^~x_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Device_Forward_OTEE_Client_Hello:
   [
   DeviceIn( $D, <eid, ~ctid, 'OTEE_hello', u, X0> ),
   Device_1( ~ctid, $D, $OTEE, ~agent_id, $A, server_pk )
   ]
  -->
   [
   Device_2( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk ),
   Out( <u, X0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Server_Hello:
   [
   Threat_Actor_0( $TA, ~prop, $A, ~ltk ), In( <client_nonce, 'g'^x_0> ),
   Fr( ~x_1 ), Fr( ~s )
   ]
  --[
  Neq( 'g'^x_0^~x_1, DH_neutral ), Neq( 'g'^x_0, 'g' ),
  Neq( 'g'^x_0, DH_neutral ), ServerHello( $TA, $A ),
  OUT_Threat_Actor_0( ~prop ), ServerDHKey( $TA, 'g'^x_0, ~x_1 ),
  ServerDHKeyG( $TA, 'g'^~x_1 ), ServerDHE( $TA, 'g'^x_0^~x_1 ),
  ServerNonce( $TA,
               v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>)
  ),
  ThreatActorS( $TA, ~s ), ThreatActorServerHelloPK( $TA, ~ltk, pk(~ltk) ),
  ThreatActorMeasurementSelection( $TA, select('g'^x_0^~x_1) ),
  ThreatActorMeasurement( $TA, measure(select('g'^x_0^~x_1), ~prop) )
  ]->
   [
   Threat_Actor_1( $TA, ~prop, ~s, $A, ~ltk, client_nonce, 'g'^x_0,
                   v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>),
                   ~x_1, derive_secret('g'^x_0^~x_1, 'c_hs_traffic'),
                   derive_secret(derive_secret('g'^x_0^~x_1, 'c_hs_traffic'), 'finished'),
                   derive_secret(derive_secret('g'^x_0^~x_1, 'derived'), 'c_ap_traffic')
   ),
   Out( <
         v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>),
         'g'^~x_1,
         senc(sign(<
                    <client_nonce, 'g'^x_0,
                     v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>),
                     'g'^~x_1>,
                    h3(<client_nonce, 'g'^x_0,
                        v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>),
                        'g'^~x_1>)
                   >,
                   ~ltk),
              derive_secret('g'^x_0^~x_1, 's_hs_traffic')),
         senc(hmac(derive_secret(derive_secret('g'^x_0^~x_1, 's_hs_traffic'),
                                 'finished'),
                   <
                    <client_nonce, 'g'^x_0,
                     v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>),
                     'g'^~x_1>,
                    sign(<
                          <client_nonce, 'g'^x_0,
                           v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>),
                           'g'^~x_1>,
                          h3(<client_nonce, 'g'^x_0,
                              v(~s, <client_nonce, h2('0', measure(select('g'^x_0^~x_1), ~prop))>),
                              'g'^~x_1>)
                         >,
                         ~ltk)
                   >),
              derive_secret('g'^x_0^~x_1, 's_hs_traffic'))
        >
   )
   ]

  /*
  rule (modulo AC) Server_Hello:
     [
     Threat_Actor_0( $TA, ~prop, $A, ~ltk ), In( <client_nonce, z> ),
     Fr( ~x_1 ), Fr( ~s )
     ]
    --[
    Neq( z.1, DH_neutral ), Neq( z, 'g' ), Neq( z, DH_neutral ),
    ServerHello( $TA, $A ), OUT_Threat_Actor_0( ~prop ),
    ServerDHKey( $TA, z, ~x_1 ), ServerDHKeyG( $TA, 'g'^~x_1 ),
    ServerDHE( $TA, z.1 ),
    ServerNonce( $TA,
                 v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>)
    ),
    ThreatActorS( $TA, ~s ), ThreatActorServerHelloPK( $TA, ~ltk, pk(~ltk) ),
    ThreatActorMeasurementSelection( $TA, select(z.1) ),
    ThreatActorMeasurement( $TA, measure(select(z.1), ~prop) )
    ]->
     [
     Threat_Actor_1( $TA, ~prop, ~s, $A, ~ltk, client_nonce, z,
                     v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>), ~x_1,
                     derive_secret(z.1, 'c_hs_traffic'),
                     derive_secret(derive_secret(z.1, 'c_hs_traffic'), 'finished'),
                     derive_secret(derive_secret(z.1, 'derived'), 'c_ap_traffic')
     ),
     Out( <v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>),
           'g'^~x_1,
           senc(sign(<
                      <client_nonce, z,
                       v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>), 'g'^~x_1>,
                      h3(<client_nonce, z,
                          v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>), 'g'^~x_1>)
                     >,
                     ~ltk),
                derive_secret(z.1, 's_hs_traffic')),
           senc(hmac(derive_secret(derive_secret(z.1, 's_hs_traffic'), 'finished'),
                     <
                      <client_nonce, z,
                       v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>), 'g'^~x_1>,
                      sign(<
                            <client_nonce, z,
                             v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>), 'g'^~x_1>,
                            h3(<client_nonce, z,
                                v(~s, <client_nonce, h2('0', measure(select(z.1), ~prop))>), 'g'^~x_1>)
                           >,
                           ~ltk)
                     >),
                derive_secret(z.1, 's_hs_traffic'))
          >
     )
     ]
    variants (modulo AC)
    1. ~x_1  = ~x_1.14
       z     = 'g'
       z.1   = 'g'^~x_1.14

    2. ~x_1  = ~x_1.14
       z     = 'g'^inv(~x_1.14)
       z.1   = 'g'

    3. ~x_1  = ~x_1.295
       z     = 'g'^x_0.583
       z.1   = 'g'^(~x_1.295*x_0.583)

    4. ~x_1  = ~x_1.297
       z     = 'g'^inv((~x_1.297*x.587))
       z.1   = 'g'^inv(x.587)

    5. ~x_1  = ~x_1.297
       z     = 'g'^(x.587*inv(~x_1.297))
       z.1   = 'g'^x.587

    6. ~x_1  = ~x_1.298
       z     = 'g'^(x.588*inv((~x_1.298*x.589)))
       z.1   = 'g'^(x.588*inv(x.589))
  */

rule (modulo E) Device_Receive_Server_Hello_Forward_To_OTEE:
   [
   Device_2( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk ),
   In( <n_1, X_1, server_certificate_verify_ext_encrypted,
        server_finished_encrypted>
   )
   ]
  --[ DeviceReceiveServerHello( $D, ~ctid, eid ) ]->
   [
   Device_3( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk ),
   DeviceOut( $D,
              <~ctid, eid, 'device_forward_server_hello', n_1, X_1,
               server_certificate_verify_ext_encrypted, server_finished_encrypted>
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) OTEE_Receive_Server_Hello:
   [
   OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, server_pk ),
   OTEEIn( $OTEE,
           <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
            senc(server_certificate_verify_ext,
                 derive_secret('g'^x_1^~x_0, 's_hs_traffic')),
            senc(server_finished, derive_secret('g'^x_1^~x_0, 's_hs_traffic'))>
   )
   ]
  --[
  Eq( verify(server_certificate_verify_ext,
             <<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
             server_pk),
      true
  ),
  Eq( server_finished,
      hmac(derive_secret(derive_secret('g'^x_1^~x_0, 's_hs_traffic'),
                         'finished'),
           <<~u, 'g'^~x_0, n_1, 'g'^x_1>, server_certificate_verify_ext>)
  ),
  Neq( 'g'^x_1^~x_0, 'g'^one ), Neq( 'g'^x_1^~x_0, DH_neutral ),
  Neq( 'g'^x_1^~x_0, 'g'^~x_0 ),
  OTEEReceiveServerHello( $OTEE, server_pk, n_1 ),
  OTEEDHKey( $OTEE, 'g'^x_1, ~x_0, 'g'^x_1^~x_0 ),
  OTEEShareInv( $OTEE, ~x_0, inv(~x_0), 'g'^x_1^~x_0 ),
  OTEESession( $OTEE, ~u ), OTEESessionServerNonce( $OTEE, ~u, n_1 ),
  PropertyHelper( $OTEE, x_1, ~x_0, 'g'^x_1^~x_0 )
  ]->
   [
   OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, 'g'^x_1, 'g'^x_1^~x_0,
           derive_secret('g'^x_1^~x_0, 'c_hs_traffic'),
           derive_secret(derive_secret('g'^x_1^~x_0, 'c_hs_traffic'), 'finished'),
           derive_secret(derive_secret('g'^x_1^~x_0, 'derived'), 'c_ap_traffic')
   )
   ]

  /*
  rule (modulo AC) OTEE_Receive_Server_Hello:
     [
     OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, server_pk ),
     OTEEIn( $OTEE,
             <ctid, ~tee_id, 'device_forward_server_hello', n_1, z,
              senc(server_certificate_verify_ext, derive_secret(z.1, 's_hs_traffic')),
              senc(server_finished, derive_secret(z.1, 's_hs_traffic'))>
     )
     ]
    --[
    Eq( z.2, true ),
    Eq( server_finished,
        hmac(derive_secret(derive_secret(z.1, 's_hs_traffic'), 'finished'),
             <<~u, 'g'^~x_0, n_1, z>, server_certificate_verify_ext>)
    ),
    Neq( z.1, 'g' ), Neq( z.1, DH_neutral ), Neq( z.1, 'g'^~x_0 ),
    OTEEReceiveServerHello( $OTEE, server_pk, n_1 ),
    OTEEDHKey( $OTEE, z, ~x_0, z.1 ),
    OTEEShareInv( $OTEE, ~x_0, inv(~x_0), z.1 ), OTEESession( $OTEE, ~u ),
    OTEESessionServerNonce( $OTEE, ~u, n_1 ),
    PropertyHelper( $OTEE, x_1, ~x_0, z.1 )
    ]->
     [
     OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, z, z.1,
             derive_secret(z.1, 'c_hs_traffic'),
             derive_secret(derive_secret(z.1, 'c_hs_traffic'), 'finished'),
             derive_secret(derive_secret(z.1, 'derived'), 'c_ap_traffic')
     )
     ]
    variants (modulo AC)
     1. ~u    = ~u.28
        ~x_0  = ~x_0.29
        n_1   = n_1.31
        server_certificate_verify_ext
              = server_certificate_verify_ext.32
        server_pk
              = server_pk.34
        x_1   = inv(~x_0.29)
        z     = 'g'^inv(~x_0.29)
        z.1   = 'g'
        z.2   = verify(server_certificate_verify_ext.32,
                       <<~u.28, 'g'^~x_0.29, n_1.31, 'g'^inv(~x_0.29)>,
                        h3(<~u.28, 'g'^~x_0.29, n_1.31, 'g'^inv(~x_0.29)>)>,
                       server_pk.34)

     2. ~u    = ~u.28
        ~x_0  = ~x_0.29
        n_1   = n_1.31
        server_certificate_verify_ext
              = server_certificate_verify_ext.32
        server_pk
              = server_pk.34
        x_1   = one
        z     = 'g'
        z.1   = 'g'^~x_0.29
        z.2   = verify(server_certificate_verify_ext.32,
                       <<~u.28, 'g'^~x_0.29, n_1.31, 'g'>, h3(<~u.28, 'g'^~x_0.29, n_1.31, 'g'>)
                       >,
                       server_pk.34)

     3. ~u    = ~u.29
        ~x_0  = ~x_0.30
        n_1   = n_1.32
        server_certificate_verify_ext
              = server_certificate_verify_ext.33
        server_pk
              = server_pk.35
        x_1   = x_1.36
        z     = 'g'^x_1.36
        z.1   = 'g'^(~x_0.30*x_1.36)
        z.2   = verify(server_certificate_verify_ext.33,
                       <<~u.29, 'g'^~x_0.30, n_1.32, 'g'^x_1.36>,
                        h3(<~u.29, 'g'^~x_0.30, n_1.32, 'g'^x_1.36>)>,
                       server_pk.35)

     4. ~u    = ~u.313
        ~x_0  = ~x_0.314
        n_1   = n_1.316
        server_certificate_verify_ext
              = sign(<<~u.313, 'g'^~x_0.314, n_1.316, 'g'>,
                      h3(<~u.313, 'g'^~x_0.314, n_1.316, 'g'>)>,
                     x.621)
        server_pk
              = pk(x.621)
        x_1   = one
        z     = 'g'
        z.1   = 'g'^~x_0.314
        z.2   = true

     5. ~u    = ~u.313
        ~x_0  = ~x_0.314
        n_1   = n_1.316
        server_certificate_verify_ext
              = sign(<<~u.313, 'g'^~x_0.314, n_1.316, 'g'^inv(~x_0.314)>,
                      h3(<~u.313, 'g'^~x_0.314, n_1.316, 'g'^inv(~x_0.314)>)>,
                     x.621)
        server_pk
              = pk(x.621)
        x_1   = inv(~x_0.314)
        z     = 'g'^inv(~x_0.314)
        z.1   = 'g'
        z.2   = true

     6. ~u    = ~u.314
        ~x_0  = ~x_0.315
        n_1   = n_1.317
        server_certificate_verify_ext
              = sign(<<~u.314, 'g'^~x_0.315, n_1.317, 'g'^x_1.321>,
                      h3(<~u.314, 'g'^~x_0.315, n_1.317, 'g'^x_1.321>)>,
                     x.623)
        server_pk
              = pk(x.623)
        x_1   = x_1.321
        z     = 'g'^x_1.321
        z.1   = 'g'^(~x_0.315*x_1.321)
        z.2   = true

     7. ~u    = ~u.314
        ~x_0  = ~x_0.315
        n_1   = n_1.317
        server_certificate_verify_ext
              = sign(<<~u.314, 'g'^~x_0.315, n_1.317, 'g'^inv((~x_0.315*x.622))>,
                      h3(<~u.314, 'g'^~x_0.315, n_1.317, 'g'^inv((~x_0.315*x.622))>)>,
                     x.623)
        server_pk
              = pk(x.623)
        x_1   = inv((~x_0.315*x.622))
        z     = 'g'^inv((~x_0.315*x.622))
        z.1   = 'g'^inv(x.622)
        z.2   = true

     8. ~u    = ~u.314
        ~x_0  = ~x_0.315
        n_1   = n_1.317
        server_certificate_verify_ext
              = sign(<<~u.314, 'g'^~x_0.315, n_1.317, 'g'^(x.622*inv(~x_0.315))>,
                      h3(<~u.314, 'g'^~x_0.315, n_1.317, 'g'^(x.622*inv(~x_0.315))>)>,
                     x.623)
        server_pk
              = pk(x.623)
        x_1   = (x.622*inv(~x_0.315))
        z     = 'g'^(x.622*inv(~x_0.315))
        z.1   = 'g'^x.622
        z.2   = true

     9. ~u    = ~u.315
        ~x_0  = ~x_0.316
        n_1   = n_1.318
        server_certificate_verify_ext
              = server_certificate_verify_ext.319
        server_pk
              = server_pk.321
        x_1   = inv((~x_0.316*x.625))
        z     = 'g'^inv((~x_0.316*x.625))
        z.1   = 'g'^inv(x.625)
        z.2   = verify(server_certificate_verify_ext.319,
                       <<~u.315, 'g'^~x_0.316, n_1.318, 'g'^inv((~x_0.316*x.625))>,
                        h3(<~u.315, 'g'^~x_0.316, n_1.318, 'g'^inv((~x_0.316*x.625))>)>,
                       server_pk.321)

    10. ~u    = ~u.315
        ~x_0  = ~x_0.316
        n_1   = n_1.318
        server_certificate_verify_ext
              = server_certificate_verify_ext.319
        server_pk
              = server_pk.321
        x_1   = (x.625*inv(~x_0.316))
        z     = 'g'^(x.625*inv(~x_0.316))
        z.1   = 'g'^x.625
        z.2   = verify(server_certificate_verify_ext.319,
                       <<~u.315, 'g'^~x_0.316, n_1.318, 'g'^(x.625*inv(~x_0.316))>,
                        h3(<~u.315, 'g'^~x_0.316, n_1.318, 'g'^(x.625*inv(~x_0.316))>)>,
                       server_pk.321)

    11. ~u    = ~u.315
        ~x_0  = ~x_0.316
        n_1   = n_1.318
        server_certificate_verify_ext
              = sign(<
                      <~u.315, 'g'^~x_0.316, n_1.318, 'g'^(x.623*inv((~x_0.316*x.624)))>,
                      h3(<~u.315, 'g'^~x_0.316, n_1.318, 'g'^(x.623*inv((~x_0.316*x.624)))>)>,
                     x.625)
        server_pk
              = pk(x.625)
        x_1   = (x.623*inv((~x_0.316*x.624)))
        z     = 'g'^(x.623*inv((~x_0.316*x.624)))
        z.1   = 'g'^(x.623*inv(x.624))
        z.2   = true

    12. ~u    = ~u.316
        ~x_0  = ~x_0.317
        n_1   = n_1.319
        server_certificate_verify_ext
              = server_certificate_verify_ext.320
        server_pk
              = server_pk.322
        x_1   = (x.626*inv((~x_0.317*x.627)))
        z     = 'g'^(x.626*inv((~x_0.317*x.627)))
        z.1   = 'g'^(x.626*inv(x.627))
        z.2   = verify(server_certificate_verify_ext.320,
                       <<~u.316, 'g'^~x_0.317, n_1.319, 'g'^(x.626*inv((~x_0.317*x.627)))>,
                        h3(<~u.316, 'g'^~x_0.317, n_1.319, 'g'^(x.626*inv((~x_0.317*x.627)))>)>,
                       server_pk.322)
  */

rule (modulo E) No_Interrupt_OTEE_Memory_Read:
   [
   OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
           c_hs_traffic_s, c_finish_k, c_ap_traffic_s
   ),
   Agent_2( ~agent_id, $A, $D, prop, server_pk )
   ]
  --[
  OTEEHonestPropertyRead( $OTEE, $D, $A, prop ), OTEESession( $OTEE, ~u ),
  OTEESessionServerNonce( $OTEE, ~u, n_1 ),
  OTEEPosition( $OTEE, select(DHE) ),
  OTEEMeasure( $OTEE, select(DHE), prop )
  ]->
   [
   OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
           c_hs_traffic_s, c_finish_k, c_ap_traffic_s, select(DHE), prop, '0'
   ),
   Out( select(DHE) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) No_Interrupt_Prepared_Memory_Read:
   [
   OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
           c_hs_traffic_s, c_finish_k, c_ap_traffic_s
   ),
   In( adv_prop )
   ]
  --[
  PreparedMemoryRead( $OTEE, $D ), RequireOSCompromise( $D ),
  OTEESession( $OTEE, ~u ), OTEESessionServerNonce( $OTEE, ~u, n_1 ),
  OTEEPosition( $OTEE, select(DHE) )
  ]->
   [
   OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
           c_hs_traffic_s, c_finish_k, c_ap_traffic_s, select(DHE), adv_prop, '0'
   ),
   Out( select(DHE) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Interrupt_OTEE_Memory_Read:
   [
   OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
           c_hs_traffic_s, c_finish_k, c_ap_traffic_s
   )
   ]
  --[
  RequireOSCompromise( $D ), InterruptOTEEMemoryRead( $OTEE, $D ),
  OTEESession( $OTEE, ~u ), OTEESessionServerNonce( $OTEE, ~u, n_1 ),
  OTEEPosition( $OTEE, select(DHE) )
  ]->
   [
   OTEE_Interrupt( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
   ),
   Out( select(DHE) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Continue_OTEE_Interrupt_With_Agent:
   [
   OTEE_Interrupt( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
   ),
   Agent_2( ~agent_id, $A, $D2, prop, server_pk )
   ]
  --[
  ResumeOTEE( $OTEE, $D ), RequireOSCompromise( $D ),
  RequireOSCompromise( $D2 ), OTEESession( $OTEE, ~u ),
  OTEESessionServerNonce( $OTEE, ~u, n_1 )
  ]->
   [
   OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
           c_hs_traffic_s, c_finish_k, c_ap_traffic_s, select(DHE), prop, '1'
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) OTEE_Challenge_Response:
   [
   OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
           c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
           int_indicator
   ),
   !OTEE_Ltk( $OTEE, ~OTEE_ltk ), Fr( ~t )
   ]
  --[
  OTEEChallengeResponse( $OTEE, $D, ~u ), OTEESession( $OTEE, ~u ),
  OTEEWitness( h2(int_indicator, measure(ch_pos, ch_prop)) ),
  OTEEChallengeResponseDH( $OTEE, ~x_0 ),
  OTEEChallengeResponseDHE( $OTEE, DHE ),
  OTEEDHShareAndInv( $OTEE, ~x_0, inv(~x_0) ),
  OTEESessionServerNonce( $OTEE, ~u, n_1 )
  ]->
   [
   OTEEOut( $OTEE,
            <~tee_id, ctid, 'OTEE_challenge_response',
             senc(hmac(c_finish_k,
                       <<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>),
                  c_hs_traffic_s),
             senc(<~t,
                   fz(n_1, ~t, <~u, h2(int_indicator, measure(ch_pos, ch_prop))>),
                   sign(<~t,
                         fz(n_1, ~t, <~u, h2(int_indicator, measure(ch_pos, ch_prop))>), $OTEE,
                         hmac(c_finish_k,
                              <<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>)
                        >,
                        ~OTEE_ltk),
                   $OTEE>,
                  c_ap_traffic_s),
             ~x_0>
   )
   ]

  /*
  rule (modulo AC) OTEE_Challenge_Response:
     [
     OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
             int_indicator
     ),
     !OTEE_Ltk( $OTEE, ~OTEE_ltk ), Fr( ~t )
     ]
    --[
    OTEEChallengeResponse( $OTEE, $D, ~u ), OTEESession( $OTEE, ~u ),
    OTEEWitness( h2(int_indicator, measure(ch_pos, x)) ),
    OTEEChallengeResponseDH( $OTEE, ~x_0 ),
    OTEEChallengeResponseDHE( $OTEE, DHE ),
    OTEEDHShareAndInv( $OTEE, ~x_0, inv(~x_0) ),
    OTEESessionServerNonce( $OTEE, ~u, n_1 )
    ]->
     [
     OTEEOut( $OTEE,
              <~tee_id, ctid, 'OTEE_challenge_response',
               senc(hmac(c_finish_k,
                         <<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>),
                    c_hs_traffic_s),
               senc(<~t, z,
                     sign(<~t, z, $OTEE,
                           hmac(c_finish_k,
                                <<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>)
                          >,
                          ~OTEE_ltk),
                     $OTEE>,
                    c_ap_traffic_s),
               ~x_0>
     )
     ]
    variants (modulo AC)
    1. ~t    = ~t.44
       ~u    = ~u.46
       ch_pos
             = ch_pos.53
       ch_prop
             = ch_prop.54
       int_indicator
             = int_indicator.56
       n_1   = n_1.57
       x     = ch_prop.54
       z     = fz(n_1.57, ~t.44,
                  <~u.46, h2(int_indicator.56, measure(ch_pos.53, ch_prop.54))>)

    2. ~t    = ~t.54
       ~u    = ~u.56
       ch_pos
             = ch_pos.63
       ch_prop
             = measure(ch_pos.63, x.77)
       int_indicator
             = int_indicator.66
       n_1   = n_1.67
       x     = x.77
       z     = fz(n_1.67, ~t.54,
                  <~u.56, h2(int_indicator.66, measure(ch_pos.63, x.77))>)

    3. ~t    = ~t.54
       ~u    = ~u.56
       ch_pos
             = ch_pos.63
       ch_prop
             = read(ch_pos.63, x.77)
       int_indicator
             = int_indicator.66
       n_1   = n_1.67
       x     = x.77
       z     = fz(n_1.67, ~t.54,
                  <~u.56, h2(int_indicator.66, measure(ch_pos.63, x.77))>)

    4. ~t    = ~t.54
       ~u    = ~u.56
       ch_pos
             = ch_pos.63
       ch_prop
             = read(ch_pos.63, measure(ch_pos.63, x.77))
       int_indicator
             = int_indicator.66
       n_1   = n_1.67
       x     = x.77
       z     = fz(n_1.67, ~t.54,
                  <~u.56, h2(int_indicator.66, measure(ch_pos.63, x.77))>)

    5. ~t    = ~t.251
       ~u    = ~u.253
       ch_pos
             = ch_pos.260
       ch_prop
             = ch_prop.261
       int_indicator
             = int_indicator.263
       n_1   = v(x.497,
                 <~u.253, h2(int_indicator.263, measure(ch_pos.260, ch_prop.261))>)
       x     = ch_prop.261
       z     = my_g2(x.497, ~t.251)

    6. ~t    = ~t.251
       ~u    = ~u.253
       ch_pos
             = ch_pos.260
       ch_prop
             = measure(ch_pos.260, x.274)
       int_indicator
             = int_indicator.263
       n_1   = v(x.497,
                 <~u.253, h2(int_indicator.263, measure(ch_pos.260, x.274))>)
       x     = x.274
       z     = my_g2(x.497, ~t.251)

    7. ~t    = ~t.251
       ~u    = ~u.253
       ch_pos
             = ch_pos.260
       ch_prop
             = read(ch_pos.260, x.274)
       int_indicator
             = int_indicator.263
       n_1   = v(x.497,
                 <~u.253, h2(int_indicator.263, measure(ch_pos.260, x.274))>)
       x     = x.274
       z     = my_g2(x.497, ~t.251)

    8. ~t    = ~t.251
       ~u    = ~u.253
       ch_pos
             = ch_pos.260
       ch_prop
             = read(ch_pos.260, measure(ch_pos.260, x.274))
       int_indicator
             = int_indicator.263
       n_1   = v(x.497,
                 <~u.253, h2(int_indicator.263, measure(ch_pos.260, x.274))>)
       x     = x.274
       z     = my_g2(x.497, ~t.251)
  */

rule (modulo E) Device_Finished:
   [
   Device_3( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk ),
   DeviceIn( $D,
             <eid, ~ctid, 'OTEE_challenge_response', client_finished_enc,
              y_z_sig_otee_id_enc, x_0>
   )
   ]
  -->
   [ Out( <client_finished_enc, y_z_sig_otee_id_enc> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Server_Finished:
   [
   Threat_Actor_1( $TA, ~prop, ~s, $A, ~ltk, u, X_0, n_1, ~x_1,
                   client_handshake_traffic_secret, client_finished_key,
                   client_application_traffic_secret
   ),
   In( <senc(client_finished, client_handshake_traffic_secret),
        senc(<y, z, sig, otee_id>, client_application_traffic_secret), OTEE_pk,
        NO_OTEE_signature>
   ),
   !NO_Pk( $NO, NO_pk )
   ]
  --[
  Eq( verify(NO_OTEE_signature, <otee_id, OTEE_pk>, NO_pk), true ),
  Eq( client_finished,
      hmac(client_finished_key,
           <<u, X_0, n_1, 'g'^~x_1>, h3(<u, X_0, n_1, 'g'^~x_1>)>)
  ),
  Eq( z, my_g2(~s, y) ),
  Eq( verify(sig, <y, z, otee_id, client_finished>, OTEE_pk), true ),
  AcceptVerificationWithAgent( $TA, otee_id, $A, ~prop ),
  AcceptVerification( $TA, otee_id ),
  AcceptVerificationDHE( $TA, X_0^~x_1 )
  ]->
   [ Threat_Actor_Done( $TA ) ]

  /*
  rule (modulo AC) Server_Finished:
     [
     Threat_Actor_1( $TA, ~prop, ~s, $A, ~ltk, u, X_0, n_1, ~x_1,
                     client_handshake_traffic_secret, client_finished_key,
                     client_application_traffic_secret
     ),
     In( <senc(client_finished, client_handshake_traffic_secret),
          senc(<y, z, sig, otee_id>, client_application_traffic_secret), OTEE_pk,
          NO_OTEE_signature>
     ),
     !NO_Pk( $NO, NO_pk )
     ]
    --[
    Eq( z.1, true ),
    Eq( client_finished,
        hmac(client_finished_key,
             <<u, X_0, n_1, 'g'^~x_1>, h3(<u, X_0, n_1, 'g'^~x_1>)>)
    ),
    Eq( z, my_g2(~s, y) ), Eq( z.2, true ),
    AcceptVerificationWithAgent( $TA, otee_id, $A, ~prop ),
    AcceptVerification( $TA, otee_id ), AcceptVerificationDHE( $TA, z.3 )
    ]->
     [ Threat_Actor_Done( $TA ) ]
    variants (modulo AC)
     1. ~x_1  = ~x_1.44
        NO_OTEE_signature
              = NO_OTEE_signature.45
        NO_pk = NO_pk.46
        OTEE_pk
              = OTEE_pk.47
        X_0   = X_0.48
        client_finished
              = client_finished.50
        otee_id
              = otee_id.54
        sig   = sig.55
        y     = y.57
        z     = z.58
        z.1   = verify(NO_OTEE_signature.45, <otee_id.54, OTEE_pk.47>, NO_pk.46)
        z.2   = verify(sig.55, <y.57, z.58, otee_id.54, client_finished.50>,
                       OTEE_pk.47)
        z.3   = X_0.48^~x_1.44

     2. ~x_1  = ~x_1.48
        NO_OTEE_signature
              = NO_OTEE_signature.49
        NO_pk = NO_pk.50
        OTEE_pk
              = OTEE_pk.51
        X_0   = z.66^inv(~x_1.48)
        client_finished
              = client_finished.54
        otee_id
              = otee_id.58
        sig   = sig.59
        y     = y.61
        z     = z.62
        z.1   = verify(NO_OTEE_signature.49, <otee_id.58, OTEE_pk.51>, NO_pk.50)
        z.2   = verify(sig.59, <y.61, z.62, otee_id.58, client_finished.54>,
                       OTEE_pk.51)
        z.3   = z.66

     3. ~x_1  = ~x_1.94
        NO_OTEE_signature
              = NO_OTEE_signature.95
        NO_pk = NO_pk.96
        OTEE_pk
              = pk(x.180)
        X_0   = X_0.98
        client_finished
              = client_finished.100
        otee_id
              = otee_id.104
        sig   = sign(<y.107, z.108, otee_id.104, client_finished.100>, x.180)
        y     = y.107
        z     = z.108
        z.1   = verify(NO_OTEE_signature.95, <otee_id.104, pk(x.180)>, NO_pk.96)
        z.2   = true
        z.3   = X_0.98^~x_1.94

     4. ~x_1  = ~x_1.95
        NO_OTEE_signature
              = NO_OTEE_signature.96
        NO_pk = NO_pk.97
        OTEE_pk
              = OTEE_pk.98
        X_0   = x.181^x.182
        client_finished
              = client_finished.101
        otee_id
              = otee_id.105
        sig   = sig.106
        y     = y.108
        z     = z.109
        z.1   = verify(NO_OTEE_signature.96, <otee_id.105, OTEE_pk.98>, NO_pk.97)
        z.2   = verify(sig.106, <y.108, z.109, otee_id.105, client_finished.101>,
                       OTEE_pk.98)
        z.3   = x.181^(~x_1.95*x.182)

     5. ~x_1  = ~x_1.96
        NO_OTEE_signature
              = NO_OTEE_signature.97
        NO_pk = NO_pk.98
        OTEE_pk
              = pk(x.182)
        X_0   = x.183^x.184
        client_finished
              = client_finished.102
        otee_id
              = otee_id.106
        sig   = sign(<y.109, z.110, otee_id.106, client_finished.102>, x.182)
        y     = y.109
        z     = z.110
        z.1   = verify(NO_OTEE_signature.97, <otee_id.106, pk(x.182)>, NO_pk.98)
        z.2   = true
        z.3   = x.183^(~x_1.96*x.184)

     6. ~x_1  = ~x_1.96
        NO_OTEE_signature
              = sign(<otee_id.106, OTEE_pk.99>, x.184)
        NO_pk = pk(x.184)
        OTEE_pk
              = OTEE_pk.99
        X_0   = X_0.100
        client_finished
              = client_finished.102
        otee_id
              = otee_id.106
        sig   = sig.107
        y     = y.109
        z     = z.110
        z.1   = true
        z.2   = verify(sig.107, <y.109, z.110, otee_id.106, client_finished.102>,
                       OTEE_pk.99)
        z.3   = X_0.100^~x_1.96

     7. ~x_1  = ~x_1.96
        NO_OTEE_signature
              = sign(<otee_id.106, pk(x.183)>, x.184)
        NO_pk = pk(x.184)
        OTEE_pk
              = pk(x.183)
        X_0   = X_0.100
        client_finished
              = client_finished.102
        otee_id
              = otee_id.106
        sig   = sign(<y.109, z.110, otee_id.106, client_finished.102>, x.183)
        y     = y.109
        z     = z.110
        z.1   = true
        z.2   = true
        z.3   = X_0.100^~x_1.96

     8. ~x_1  = ~x_1.97
        NO_OTEE_signature
              = NO_OTEE_signature.98
        NO_pk = NO_pk.99
        OTEE_pk
              = pk(x.186)
        X_0   = z.115^inv(~x_1.97)
        client_finished
              = client_finished.103
        otee_id
              = otee_id.107
        sig   = sign(<y.110, z.111, otee_id.107, client_finished.103>, x.186)
        y     = y.110
        z     = z.111
        z.1   = verify(NO_OTEE_signature.98, <otee_id.107, pk(x.186)>, NO_pk.99)
        z.2   = true
        z.3   = z.115

     9. ~x_1  = ~x_1.97
        NO_OTEE_signature
              = sign(<otee_id.107, OTEE_pk.100>, x.186)
        NO_pk = pk(x.186)
        OTEE_pk
              = OTEE_pk.100
        X_0   = z.115^inv(~x_1.97)
        client_finished
              = client_finished.103
        otee_id
              = otee_id.107
        sig   = sig.108
        y     = y.110
        z     = z.111
        z.1   = true
        z.2   = verify(sig.108, <y.110, z.111, otee_id.107, client_finished.103>,
                       OTEE_pk.100)
        z.3   = z.115

    10. ~x_1  = ~x_1.97
        NO_OTEE_signature
              = sign(<otee_id.107, pk(x.185)>, x.186)
        NO_pk = pk(x.186)
        OTEE_pk
              = pk(x.185)
        X_0   = z.115^inv(~x_1.97)
        client_finished
              = client_finished.103
        otee_id
              = otee_id.107
        sig   = sign(<y.110, z.111, otee_id.107, client_finished.103>, x.185)
        y     = y.110
        z     = z.111
        z.1   = true
        z.2   = true
        z.3   = z.115

    11. ~x_1  = ~x_1.98
        NO_OTEE_signature
              = sign(<otee_id.108, OTEE_pk.101>, x.186)
        NO_pk = pk(x.186)
        OTEE_pk
              = OTEE_pk.101
        X_0   = x.187^x.188
        client_finished
              = client_finished.104
        otee_id
              = otee_id.108
        sig   = sig.109
        y     = y.111
        z     = z.112
        z.1   = true
        z.2   = verify(sig.109, <y.111, z.112, otee_id.108, client_finished.104>,
                       OTEE_pk.101)
        z.3   = x.187^(~x_1.98*x.188)

    12. ~x_1  = ~x_1.98
        NO_OTEE_signature
              = sign(<otee_id.108, pk(x.185)>, x.186)
        NO_pk = pk(x.186)
        OTEE_pk
              = pk(x.185)
        X_0   = x.187^x.188
        client_finished
              = client_finished.104
        otee_id
              = otee_id.108
        sig   = sign(<y.111, z.112, otee_id.108, client_finished.104>, x.185)
        y     = y.111
        z     = z.112
        z.1   = true
        z.2   = true
        z.3   = x.187^(~x_1.98*x.188)

    13. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = NO_OTEE_signature.100
        NO_pk = NO_pk.101
        OTEE_pk
              = OTEE_pk.102
        X_0   = x.189^inv((~x_1.99*x.190))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sig.110
        y     = y.112
        z     = z.113
        z.1   = verify(NO_OTEE_signature.100, <otee_id.109, OTEE_pk.102>,
                       NO_pk.101)
        z.2   = verify(sig.110, <y.112, z.113, otee_id.109, client_finished.105>,
                       OTEE_pk.102)
        z.3   = x.189^inv(x.190)

    14. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = NO_OTEE_signature.100
        NO_pk = NO_pk.101
        OTEE_pk
              = OTEE_pk.102
        X_0   = x.189^(x.190*inv(~x_1.99))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sig.110
        y     = y.112
        z     = z.113
        z.1   = verify(NO_OTEE_signature.100, <otee_id.109, OTEE_pk.102>,
                       NO_pk.101)
        z.2   = verify(sig.110, <y.112, z.113, otee_id.109, client_finished.105>,
                       OTEE_pk.102)
        z.3   = x.189^x.190

    15. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = NO_OTEE_signature.100
        NO_pk = NO_pk.101
        OTEE_pk
              = pk(x.188)
        X_0   = x.189^inv((~x_1.99*x.190))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sign(<y.112, z.113, otee_id.109, client_finished.105>, x.188)
        y     = y.112
        z     = z.113
        z.1   = verify(NO_OTEE_signature.100, <otee_id.109, pk(x.188)>,
                       NO_pk.101)
        z.2   = true
        z.3   = x.189^inv(x.190)

    16. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = NO_OTEE_signature.100
        NO_pk = NO_pk.101
        OTEE_pk
              = pk(x.188)
        X_0   = x.189^(x.190*inv(~x_1.99))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sign(<y.112, z.113, otee_id.109, client_finished.105>, x.188)
        y     = y.112
        z     = z.113
        z.1   = verify(NO_OTEE_signature.100, <otee_id.109, pk(x.188)>,
                       NO_pk.101)
        z.2   = true
        z.3   = x.189^x.190

    17. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = sign(<otee_id.109, OTEE_pk.102>, x.188)
        NO_pk = pk(x.188)
        OTEE_pk
              = OTEE_pk.102
        X_0   = x.189^inv((~x_1.99*x.190))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sig.110
        y     = y.112
        z     = z.113
        z.1   = true
        z.2   = verify(sig.110, <y.112, z.113, otee_id.109, client_finished.105>,
                       OTEE_pk.102)
        z.3   = x.189^inv(x.190)

    18. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = sign(<otee_id.109, OTEE_pk.102>, x.188)
        NO_pk = pk(x.188)
        OTEE_pk
              = OTEE_pk.102
        X_0   = x.189^(x.190*inv(~x_1.99))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sig.110
        y     = y.112
        z     = z.113
        z.1   = true
        z.2   = verify(sig.110, <y.112, z.113, otee_id.109, client_finished.105>,
                       OTEE_pk.102)
        z.3   = x.189^x.190

    19. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = sign(<otee_id.109, pk(x.187)>, x.188)
        NO_pk = pk(x.188)
        OTEE_pk
              = pk(x.187)
        X_0   = x.189^inv((~x_1.99*x.190))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sign(<y.112, z.113, otee_id.109, client_finished.105>, x.187)
        y     = y.112
        z     = z.113
        z.1   = true
        z.2   = true
        z.3   = x.189^inv(x.190)

    20. ~x_1  = ~x_1.99
        NO_OTEE_signature
              = sign(<otee_id.109, pk(x.187)>, x.188)
        NO_pk = pk(x.188)
        OTEE_pk
              = pk(x.187)
        X_0   = x.189^(x.190*inv(~x_1.99))
        client_finished
              = client_finished.105
        otee_id
              = otee_id.109
        sig   = sign(<y.112, z.113, otee_id.109, client_finished.105>, x.187)
        y     = y.112
        z     = z.113
        z.1   = true
        z.2   = true
        z.3   = x.189^x.190

    21. ~x_1  = ~x_1.100
        NO_OTEE_signature
              = NO_OTEE_signature.101
        NO_pk = NO_pk.102
        OTEE_pk
              = OTEE_pk.103
        X_0   = x.190^(x.191*inv((~x_1.100*x.192)))
        client_finished
              = client_finished.106
        otee_id
              = otee_id.110
        sig   = sig.111
        y     = y.113
        z     = z.114
        z.1   = verify(NO_OTEE_signature.101, <otee_id.110, OTEE_pk.103>,
                       NO_pk.102)
        z.2   = verify(sig.111, <y.113, z.114, otee_id.110, client_finished.106>,
                       OTEE_pk.103)
        z.3   = x.190^(x.191*inv(x.192))

    22. ~x_1  = ~x_1.100
        NO_OTEE_signature
              = NO_OTEE_signature.101
        NO_pk = NO_pk.102
        OTEE_pk
              = pk(x.189)
        X_0   = x.190^(x.191*inv((~x_1.100*x.192)))
        client_finished
              = client_finished.106
        otee_id
              = otee_id.110
        sig   = sign(<y.113, z.114, otee_id.110, client_finished.106>, x.189)
        y     = y.113
        z     = z.114
        z.1   = verify(NO_OTEE_signature.101, <otee_id.110, pk(x.189)>,
                       NO_pk.102)
        z.2   = true
        z.3   = x.190^(x.191*inv(x.192))

    23. ~x_1  = ~x_1.100
        NO_OTEE_signature
              = sign(<otee_id.110, OTEE_pk.103>, x.189)
        NO_pk = pk(x.189)
        OTEE_pk
              = OTEE_pk.103
        X_0   = x.190^(x.191*inv((~x_1.100*x.192)))
        client_finished
              = client_finished.106
        otee_id
              = otee_id.110
        sig   = sig.111
        y     = y.113
        z     = z.114
        z.1   = true
        z.2   = verify(sig.111, <y.113, z.114, otee_id.110, client_finished.106>,
                       OTEE_pk.103)
        z.3   = x.190^(x.191*inv(x.192))

    24. ~x_1  = ~x_1.100
        NO_OTEE_signature
              = sign(<otee_id.110, pk(x.188)>, x.189)
        NO_pk = pk(x.189)
        OTEE_pk
              = pk(x.188)
        X_0   = x.190^(x.191*inv((~x_1.100*x.192)))
        client_finished
              = client_finished.106
        otee_id
              = otee_id.110
        sig   = sign(<y.113, z.114, otee_id.110, client_finished.106>, x.188)
        y     = y.113
        z     = z.114
        z.1   = true
        z.2   = true
        z.3   = x.190^(x.191*inv(x.192))

    25. NO_OTEE_signature
              = NO_OTEE_signature.45
        NO_pk = NO_pk.46
        OTEE_pk
              = OTEE_pk.47
        X_0   = DH_neutral
        client_finished
              = client_finished.50
        otee_id
              = otee_id.54
        sig   = sig.55
        y     = y.57
        z     = z.58
        z.1   = verify(NO_OTEE_signature.45, <otee_id.54, OTEE_pk.47>, NO_pk.46)
        z.2   = verify(sig.55, <y.57, z.58, otee_id.54, client_finished.50>,
                       OTEE_pk.47)
        z.3   = DH_neutral

    26. NO_OTEE_signature
              = NO_OTEE_signature.95
        NO_pk = NO_pk.96
        OTEE_pk
              = pk(x.180)
        X_0   = DH_neutral
        client_finished
              = client_finished.100
        otee_id
              = otee_id.104
        sig   = sign(<y.107, z.108, otee_id.104, client_finished.100>, x.180)
        y     = y.107
        z     = z.108
        z.1   = verify(NO_OTEE_signature.95, <otee_id.104, pk(x.180)>, NO_pk.96)
        z.2   = true
        z.3   = DH_neutral

    27. NO_OTEE_signature
              = sign(<otee_id.106, OTEE_pk.99>, x.184)
        NO_pk = pk(x.184)
        OTEE_pk
              = OTEE_pk.99
        X_0   = DH_neutral
        client_finished
              = client_finished.102
        otee_id
              = otee_id.106
        sig   = sig.107
        y     = y.109
        z     = z.110
        z.1   = true
        z.2   = verify(sig.107, <y.109, z.110, otee_id.106, client_finished.102>,
                       OTEE_pk.99)
        z.3   = DH_neutral

    28. NO_OTEE_signature
              = sign(<otee_id.106, pk(x.183)>, x.184)
        NO_pk = pk(x.184)
        OTEE_pk
              = pk(x.183)
        X_0   = DH_neutral
        client_finished
              = client_finished.102
        otee_id
              = otee_id.106
        sig   = sign(<y.109, z.110, otee_id.106, client_finished.102>, x.183)
        y     = y.109
        z     = z.110
        z.1   = true
        z.2   = true
        z.3   = DH_neutral
  */

restriction Equality:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction Inequality:
  "∀ x #i. (Neq( x, x ) @ #i) ⇒ (⊥)"
  // safety formula

restriction Unique:
  "∀ x #i #j. ((Unique( x ) @ #i) ∧ (Unique( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction OnlyOneNO:
  "∀ x y #i #j.
    ((InitializeNO( x ) @ #i) ∧ (InitializeNO( y ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction AdversaryDeviceCompromise:
  "∀ D #i.
    (RequireOSCompromise( D ) @ #i) ⇒
    (∃ #j. (OSCompromise( D ) @ #j) ∧ (#j < #i))"

restriction OnlyOneThreatActor:
  "∀ TA TA2 #i #j.
    ((ThreatActorInitialized( TA ) @ #i) ∧
     (ThreatActorInitialized( TA2 ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction AdversaryDoesNotExtractPropertiesFromOwnAgents:
  "∀ A prop #i #j.
    ((AdversaryExtractAgentProperties( A, prop ) @ #i) ∧
     (AdversaryCreateAgent( A, prop ) @ #j)) ⇒
    (⊥)"
  // safety formula

restriction OTEESessionCannotInterleaveWithSameNonce:
  "∀ OTEE u n1 #i #j.
    ((OTEESessionServerNonce( OTEE, u, n1 ) @ #i) ∧
     (OTEESessionServerNonce( OTEE, u, n1 ) @ #j)) ⇒
    (∀ u_2 #k.
      ((((OTEESessionServerNonce( OTEE, u_2, n1 ) @ #k) ∧ (#i < #k)) ∧
        (#k < #j)) ∧
       (¬(u = u_2))) ⇒
      (⊥))"
  // safety formula

restriction OTEESessionHasToFinishBeforeStartingNext:
  "∀ OTEE u u_2 n_1 #i #j.
    ((((OTEESessionServerNonce( OTEE, u, n_1 ) @ #i) ∧
       (OTEESessionServerNonce( OTEE, u_2, n_1 ) @ #j)) ∧
      (#i < #j)) ∧
     (¬(u = u_2))) ⇒
    (∃ C #k.
      ((OTEEChallengeResponse( OTEE, C, u ) @ #k) ∧ (#i < #k)) ∧ (#k < #j))"

lemma device_id_only_from_device [sources]:
  all-traces
  "∀ D ctid eid #i.
    (DeviceReceiveServerHello( D, ctid, eid ) @ #i) ⇒
    ((∃ #j. (DeviceStartTLS( D, ctid ) @ #j) ∧ (#j < #i)) ∧
     ((∃ #j. (OTEEStartThread( eid ) @ #j) ∧ (#j < #i)) ∨
      (∃ #j. (!KU( eid ) @ #j) ∧ (#j < #i))))"
/*
guarded formula characterizing all counter-examples:
"∃ D ctid eid #i.
  (DeviceReceiveServerHello( D, ctid, eid ) @ #i)
 ∧
  ((∀ #j. (DeviceStartTLS( D, ctid ) @ #j) ⇒ ¬(#j < #i)) ∨
   ((∀ #j. (OTEEStartThread( eid ) @ #j) ⇒ ¬(#j < #i)) ∧
    (∀ #j. (!KU( eid ) @ #j) ⇒ ¬(#j < #i))))"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∀ #j. (DeviceStartTLS( $D, ~ctid ) @ #j) ⇒ ¬(#j < #i))  ∥
         ((∀ #j. (OTEEStartThread( eid ) @ #j) ⇒ ¬(#j < #i)) ∧
          (∀ #j. (!KU( eid ) @ #j) ⇒ ¬(#j < #i))) )
    case case_1
    solve( (∀ D ctid eid #i.
             (DeviceReceiveServerHello( D, ctid, eid ) @ #i)
            ⇒
             ((last(#i)) ∨
              ((∃ #j. (DeviceStartTLS( D, ctid ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) ∧
               (((∃ #j. (OTEEStartThread( eid ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) ∨
                 (∃ #j. (!KU( eid ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)))))))  ∥
           (∃ D #i.
             (RequireOSCompromise( D ) @ #i)
            ∧
             (¬(last(#i))) ∧
             (∀ #j.
               (OSCompromise( D ) @ #j) ⇒ ((last(#j)) ∨ (#j = #i) ∨ (#i < #j))))  ∥
           (∃ OTEE u u_2 n_1 #i #j.
             (OTEESessionServerNonce( OTEE, u, n_1 ) @ #i) ∧
             (OTEESessionServerNonce( OTEE, u_2, n_1 ) @ #j)
            ∧
             (¬(last(#j))) ∧
             (¬(last(#i))) ∧
             (#i < #j) ∧
             (¬(u = u_2)) ∧
             (∀ C #k.
               (OTEEChallengeResponse( OTEE, C, u ) @ #k)
              ⇒
               ((last(#k)) ∨ (#i = #k) ∨ (#k < #i) ∨ (#k = #j) ∨ (#j < #k)))) )
      case case_1
      solve( Device_2( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk
             ) ▶₀ #i )
        case Device_Forward_OTEE_Client_Hello_case_1
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_2
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_3
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_4
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_5
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_6
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_7
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_8
        by contradiction /* from formulas */
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      solve( Device_2( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk
             ) ▶₀ #i )
        case Device_Forward_OTEE_Client_Hello_case_1
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_2
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_3
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_4
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_5
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_6
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_7
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_8
        by contradiction /* from formulas */
      qed
    qed
  next
    case case_2
    solve( (∀ D ctid eid #i.
             (DeviceReceiveServerHello( D, ctid, eid ) @ #i)
            ⇒
             ((last(#i)) ∨
              ((∃ #j. (DeviceStartTLS( D, ctid ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) ∧
               (((∃ #j. (OTEEStartThread( eid ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) ∨
                 (∃ #j. (!KU( eid ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)))))))  ∥
           (∃ D #i.
             (RequireOSCompromise( D ) @ #i)
            ∧
             (¬(last(#i))) ∧
             (∀ #j.
               (OSCompromise( D ) @ #j) ⇒ ((last(#j)) ∨ (#j = #i) ∨ (#i < #j))))  ∥
           (∃ OTEE u u_2 n_1 #i #j.
             (OTEESessionServerNonce( OTEE, u, n_1 ) @ #i) ∧
             (OTEESessionServerNonce( OTEE, u_2, n_1 ) @ #j)
            ∧
             (¬(last(#j))) ∧
             (¬(last(#i))) ∧
             (#i < #j) ∧
             (¬(u = u_2)) ∧
             (∀ C #k.
               (OTEEChallengeResponse( OTEE, C, u ) @ #k)
              ⇒
               ((last(#k)) ∨ (#i = #k) ∨ (#k < #i) ∨ (#k = #j) ∨ (#j < #k)))) )
      case case_1
      solve( Device_2( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk
             ) ▶₀ #i )
        case Device_Forward_OTEE_Client_Hello_case_1
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_2
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_3
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_4
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_5
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_6
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_7
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_8
        by contradiction /* from formulas */
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      solve( Device_2( ~ctid, eid, $D, $OTEE, ~agent_id, $A, server_pk
             ) ▶₀ #i )
        case Device_Forward_OTEE_Client_Hello_case_1
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_2
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_3
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_4
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_5
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_6
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_7
        by contradiction /* from formulas */
      next
        case Device_Forward_OTEE_Client_Hello_case_8
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma adversaryCannotCompromiseThreatActorLTK [reuse]:
  all-traces
  "∀ TA ltk #i #j.
    ((ThreatActorLTK( TA, ltk ) @ #i) ∧ (!KU( ltk ) @ #j)) ⇒ (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ TA ltk #i #j. (ThreatActorLTK( TA, ltk ) @ #i) ∧ (!KU( ltk ) @ #j)"
*/
simplify
by solve( !KU( ~ltk ) @ #j )

lemma adversaryCannotCompromiseNOLTK [reuse]:
  all-traces
  "∀ NO ltk #i #j.
    ((InitializeNO_LTK( NO, ltk ) @ #i) ∧ (!KU( ltk ) @ #j)) ⇒ (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ NO ltk #i #j. (InitializeNO_LTK( NO, ltk ) @ #i) ∧ (!KU( ltk ) @ #j)"
*/
simplify
by solve( !KU( ~ltk ) @ #j )

lemma adversaryCannotRecoverDeviceDHSecret [reuse]:
  all-traces
  "∀ OTEE D x_0 u #i #j.
    (((OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (OTEESession( OTEE, u ) @ #i)) ∧
     (!KU( x_0 ) @ #j)) ⇒
    (∃ #k.
      ((OTEEChallengeResponseDH( OTEE, x_0 ) @ #k) ∧
       (OTEESession( OTEE, u ) @ #k)) ∧
      (#k < #j))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D x_0 u #i #j.
  (OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧
  (OTEESession( OTEE, u ) @ #i) ∧
  (!KU( x_0 ) @ #j)
 ∧
  ∀ #k.
   (OTEEChallengeResponseDH( OTEE, x_0 ) @ #k) ∧
   (OTEESession( OTEE, u ) @ #k)
  ⇒
   ¬(#k < #j)"
*/
simplify
solve( OTEESession( $OTEE, u.1 ) @ #i )
  case OTEE_Client_Hello
  solve( !OTEE( $OTEE, $D ) ▶₀ #i )
    case NO_Register_OTEE_On_Device
    solve( OTEEIn( $OTEE, <ctid, 'call_hello', server_pk> ) ▶₁ #i )
      case AdversaryWriteToOTEE
      solve( !KU( ~x_0 ) @ #j.1 )
        case AdversaryReadOTEEOut_case_01
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_02
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_03
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_04
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_05
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_06
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_07
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_08
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_09
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_10
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_11
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_12
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_13
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_14
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_15
        by contradiction /* from formulas */
      qed
    next
      case DeviceOTEEChannel_case_1
      solve( !KU( ~x_0 ) @ #j )
        case AdversaryReadOTEEOut_case_01
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_02
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_03
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_04
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_05
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_06
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_07
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_08
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_09
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_10
        by contradiction /* from formulas */
      qed
    next
      case DeviceOTEEChannel_case_2
      solve( !KU( ~x_0 ) @ #j )
        case AdversaryReadOTEEOut_case_01
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_02
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_03
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_04
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_05
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_06
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_07
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_08
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_09
        by contradiction /* from formulas */
      next
        case AdversaryReadOTEEOut_case_10
        by contradiction /* from formulas */
      qed
    next
      case DeviceOTEEChannel_case_3
      by solve( !KU( ~x_0 ) @ #j.1 )
    next
      case DeviceOTEEChannel_case_4
      by solve( !KU( ~x_0 ) @ #j.1 )
    qed
  qed
qed

lemma OTEEChallengeResponseOnlyIfOTEEHello [reuse]:
  all-traces
  "∀ OTEE D u x_0 #i.
    ((OTEEChallengeResponse( OTEE, D, u ) @ #i) ∧
     (OTEEChallengeResponseDH( OTEE, x_0 ) @ #i)) ⇒
    (∃ #j.
      (OTEEHello( OTEE, D, u ) @ #j) ∧ (OTEEHelloDH( OTEE, D, x_0 ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D u x_0 #i.
  (OTEEChallengeResponse( OTEE, D, u ) @ #i) ∧
  (OTEEChallengeResponseDH( OTEE, x_0 ) @ #i)
 ∧
  ∀ #j.
   (OTEEHello( OTEE, D, u ) @ #j) ∧ (OTEEHelloDH( OTEE, D, x_0 ) @ #j) ⇒ ⊥"
*/
simplify
solve( OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
               c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
               int_indicator
       ) ▶₀ #i )
  case Continue_OTEE_Interrupt_With_Agent_case_01
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_02
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_03
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_04
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_05
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_06
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_07
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_08
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_09
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_10
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_11
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_12
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_13
  by contradiction /* from formulas */
next
  case Continue_OTEE_Interrupt_With_Agent_case_14
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_01
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_02
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_03
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_04
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_05
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_06
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_07
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_08
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_09
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_10
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_11
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_12
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_13
  by contradiction /* from formulas */
next
  case No_Interrupt_OTEE_Memory_Read_case_14
  by contradiction /* from formulas */
next
  case No_Interrupt_Prepared_Memory_Read_case_1
  by contradiction /* from formulas */
next
  case No_Interrupt_Prepared_Memory_Read_case_2
  by contradiction /* from formulas */
next
  case No_Interrupt_Prepared_Memory_Read_case_3
  by contradiction /* from formulas */
next
  case No_Interrupt_Prepared_Memory_Read_case_4
  by contradiction /* from formulas */
next
  case No_Interrupt_Prepared_Memory_Read_case_5
  by contradiction /* from formulas */
next
  case No_Interrupt_Prepared_Memory_Read_case_6
  by contradiction /* from formulas */
next
  case No_Interrupt_Prepared_Memory_Read_case_7
  by contradiction /* from formulas */
qed

lemma OTEEsNeverChooseSameSecrets [reuse]:
  all-traces
  "(∀ OTEE D D2 u #i #j.
     (((OTEEChallengeResponse( OTEE, D, u ) @ #i) ∧
       (OTEEChallengeResponse( OTEE, D2, u ) @ #j)) ∧
      (¬(#i = #j))) ⇒
     (⊥)) ∧
   (∀ OTEE x_0 #i #j.
     (((OTEEChallengeResponseDH( OTEE, x_0 ) @ #i) ∧
       (OTEEChallengeResponseDH( OTEE, x_0 ) @ #j)) ∧
      (¬(#i = #j))) ⇒
     (⊥))"
/*
guarded formula characterizing all counter-examples:
"((∃ OTEE D D2 u #i #j.
    (OTEEChallengeResponse( OTEE, D, u ) @ #i) ∧
    (OTEEChallengeResponse( OTEE, D2, u ) @ #j)
   ∧
    ¬(#i = #j)) ∨
  (∃ OTEE x_0 #i #j.
    (OTEEChallengeResponseDH( OTEE, x_0 ) @ #i) ∧
    (OTEEChallengeResponseDH( OTEE, x_0 ) @ #j)
   ∧
    ¬(#i = #j)))"
*/
simplify
solve( (∃ OTEE D D2 u #i #j.
         (OTEEChallengeResponse( OTEE, D, u ) @ #i) ∧
         (OTEEChallengeResponse( OTEE, D2, u ) @ #j)
        ∧
         ¬(#i = #j))  ∥
       (∃ OTEE x_0 #i #j.
         (OTEEChallengeResponseDH( OTEE, x_0 ) @ #i) ∧
         (OTEEChallengeResponseDH( OTEE, x_0 ) @ #j)
        ∧
         ¬(#i = #j)) )
  case case_1
  solve( OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                 int_indicator
         ) ▶₀ #i )
    case Continue_OTEE_Interrupt_With_Agent_case_01
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_02
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_03
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_04
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_05
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_06
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_07
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_08
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_09
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_10
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_11
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_12
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_13
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_14
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_01
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_02
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_03
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_04
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_05
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_06
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_07
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_08
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_09
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_10
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_11
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_12
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_13
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_14
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_1
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_2
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_3
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_4
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_5
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_6
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_7
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  qed
next
  case case_2
  solve( OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                 int_indicator
         ) ▶₀ #i )
    case Continue_OTEE_Interrupt_With_Agent_case_01
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_02
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_03
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_04
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_05
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_06
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_07
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_08
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_09
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_10
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_11
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_12
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_13
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case Continue_OTEE_Interrupt_With_Agent_case_14
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case Continue_OTEE_Interrupt_With_Agent
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_01
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_02
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_03
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_04
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_05
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_06
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_07
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_08
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_09
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_10
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_11
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_12
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_13
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_OTEE_Memory_Read_case_14
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_OTEE_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_1
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_2
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_3
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_4
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_5
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_6
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  next
    case No_Interrupt_Prepared_Memory_Read_case_7
    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1.1,
                   DHE.1, c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop.1,
                   int_indicator
           ) ▶₀ #j )
      case No_Interrupt_Prepared_Memory_Read
      by contradiction /* from formulas */
    qed
  qed
qed

lemma adversaryCannotRecoverServerDHSecret [reuse]:
  all-traces
  "∀ TA x_0 x_1 #i #j.
    ((ServerDHKey( TA, x_0, x_1 ) @ #i) ∧ (!KU( x_1 ) @ #j)) ⇒ (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ TA x_0 x_1 #i #j.
  (ServerDHKey( TA, x_0, x_1 ) @ #i) ∧ (!KU( x_1 ) @ #j)"
*/
simplify
by solve( !KU( ~x_1 ) @ #j )

lemma DH_source [reuse]:
  all-traces
  "∀ OTEE x_1 x_0 DHE #i.
    (OTEEDHKey( OTEE, x_1, x_0, DHE ) @ #i) ⇒
    ((∃ #j. !KU( x_1 ) @ #j) ∨ (¬(∃ #j. (!KU( DHE ) @ #j) ∧ (#j < #i))))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE x_1 x_0 DHE #i.
  (OTEEDHKey( OTEE, x_1, x_0, DHE ) @ #i)
 ∧
  (∀ #j. (!KU( x_1 ) @ #j) ⇒ ⊥) ∧ (∃ #j. (!KU( DHE ) @ #j) ∧ #j < #i)"
*/
simplify
solve( splitEqs(0) )
  case split_case_1
  by contradiction /* from formulas */
next
  case split_case_2
  by contradiction /* from formulas */
next
  case split_case_3
  solve( !KU( 'g'^(~x_0*x_1) ) @ #j )
    case AdversaryReadOTEEOut_case_01
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_02
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_03
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                ~ltk),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_04
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_05
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_06
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_07
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_08
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_09
    by solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  next
    case AdversaryReadOTEEOut_case_10
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_11
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_12
    by solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  next
    case AdversaryReadOTEEOut_case_13
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_14
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case AdversaryReadOTEEOut_case_15
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_01
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_02
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_03
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                ~ltk),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_04
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_05
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_06
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_07
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_08
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_09
    by solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  next
    case Device_Forward_OTEE_Client_Hello_case_10
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_11
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_12
    by solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  next
    case Device_Forward_OTEE_Client_Hello_case_13
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_14
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_15
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_16
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_17
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*~x_0.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x*~x_0.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*~x_0.1)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_0.1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_0.1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_0.1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_0.1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Device_Forward_OTEE_Client_Hello_case_18
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    qed
  next
    case Server_Hello_case_1
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Server_Hello_case_2
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_1*x),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x)>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1*x), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1*x), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x)>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1*x), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(~x_1*x.1),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1*x.1),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case Server_Hello_case_3
    by solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  next
    case c_exp
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                ~ltk),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case split_case_4
  solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
    case OTEE_Client_Hello_case_1
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*inv(~x_0)),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>)>,
                              ~ltk),
                         derive_secret('g'^x, 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^x, 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>)>,
                                    ~ltk)
                              >),
                         derive_secret('g'^x, 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel
      by contradiction /* from formulas */
    qed
  next
    case OTEE_Client_Hello_case_2
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                    'g'^(x.1*inv(~x_0)),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                              x),
                         derive_secret('g'^x.1, 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                    x)
                              >),
                         derive_secret('g'^x.1, 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel
      by contradiction /* from formulas */
    qed
  next
    case OTEE_Client_Hello_case_3
    solve( OTEEIn( $OTEE,
                   <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x.1*inv(~x_0)),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                              x),
                         derive_secret('g'^x.1, 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                    x)
                              >),
                         derive_secret('g'^x.1, 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel_case_1
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel_case_2
      by contradiction /* from formulas */
    qed
  qed
next
  case split_case_5
  solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
    case OTEE_Client_Hello_case_1
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x)),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>)>,
                              ~ltk),
                         derive_secret('g'^inv(x), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^inv(x), 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>)>,
                                    ~ltk)
                              >),
                         derive_secret('g'^inv(x), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel
      by contradiction /* from formulas */
    qed
  next
    case OTEE_Client_Hello_case_2
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                    'g'^inv((~x_0*x.1)),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                              x),
                         derive_secret('g'^inv(x.1), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                    x)
                              >),
                         derive_secret('g'^inv(x.1), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel
      by contradiction /* from formulas */
    qed
  next
    case OTEE_Client_Hello_case_3
    solve( OTEEIn( $OTEE,
                   <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x.1)),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                              x),
                         derive_secret('g'^inv(x.1), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                    x)
                              >),
                         derive_secret('g'^inv(x.1), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel_case_1
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel_case_2
      by contradiction /* from formulas */
    qed
  qed
next
  case split_case_6
  solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
    case OTEE_Client_Hello_case_1
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                    'g'^(x*inv((~x_0*x.1))),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>)>,
                              ~ltk),
                         derive_secret('g'^(x*inv(x.1)), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^(x*inv(x.1)), 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>)>,
                                    ~ltk)
                              >),
                         derive_secret('g'^(x*inv(x.1)), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel
      by contradiction /* from formulas */
    qed
  next
    case OTEE_Client_Hello_case_2
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                    'g'^(x.1*inv((~x_0*x.2))),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                              x),
                         derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                          's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                    x)
                              >),
                         derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel
      by contradiction /* from formulas */
    qed
  next
    case OTEE_Client_Hello_case_3
    solve( OTEEIn( $OTEE,
                   <ctid, ~tee_id, 'device_forward_server_hello', n_1,
                    'g'^(x.1*inv((~x_0*x.2))),
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                              x),
                         derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                          's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                    x)
                              >),
                         derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel_case_1
      by contradiction /* from formulas */
    next
      case DeviceOTEEChannel_case_2
      by contradiction /* from formulas */
    qed
  qed
qed

lemma adversaryCannotLearnThreatActorS [reuse]:
  all-traces
  "∀ TA s #i #j. ((ThreatActorS( TA, s ) @ #i) ∧ (!KU( s ) @ #j)) ⇒ (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ TA s #i #j. (ThreatActorS( TA, s ) @ #i) ∧ (!KU( s ) @ #j)"
*/
simplify
solve( splitEqs(0) )
  case split_case_1
  by contradiction /* from formulas */
next
  case split_case_2
  solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
    case Threat_Actor_Create_Agent
    by solve( !KU( ~s ) @ #j )
  qed
next
  case split_case_3
  solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
    case Threat_Actor_Create_Agent
    by solve( !KU( ~s ) @ #j )
  qed
next
  case split_case_4
  solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
    case Threat_Actor_Create_Agent
    by solve( !KU( ~s ) @ #j )
  qed
next
  case split_case_5
  solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
    case Threat_Actor_Create_Agent
    by solve( !KU( ~s ) @ #j )
  qed
next
  case split_case_6
  solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
    case Threat_Actor_Create_Agent
    by solve( !KU( ~s ) @ #j )
  qed
qed

lemma adversaryCannotFigureOutMeasurementPositionsBeforeTheMeasurementHappens [reuse]:
  all-traces
  "∀ OTEE ch_pos ch_prop TA #i #j #k.
    ((((OTEEMeasure( OTEE, ch_pos, ch_prop ) @ #i) ∧
       (ServerDHE( TA, ch_pos ) @ #j)) ∧
      (!KU( ch_pos ) @ #k)) ∧
     (#k < #i)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE ch_pos ch_prop TA #i #j #k.
  (OTEEMeasure( OTEE, ch_pos, ch_prop ) @ #i) ∧
  (ServerDHE( TA, ch_pos ) @ #j) ∧
  (!KU( ch_pos ) @ #k)
 ∧
  #k < #i"
*/
by simplify

lemma adversaryCannotExtractAgentPropertiesBeforeMeasurement [reuse]:
  all-traces
  "∀ OTEE ch_pos ch_prop A TA #i #j #k.
    ((((OTEEMeasure( OTEE, ch_pos, ch_prop ) @ #i) ∧
       (AdversaryExtractAgentProperties( A, ch_prop ) @ #j)) ∧
      (ServerDHE( TA, ch_pos ) @ #k)) ∧
     (#j < #i)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE ch_pos ch_prop A TA #i #j #k.
  (OTEEMeasure( OTEE, ch_pos, ch_prop ) @ #i) ∧
  (AdversaryExtractAgentProperties( A, ch_prop ) @ #j) ∧
  (ServerDHE( TA, ch_pos ) @ #k)
 ∧
  #j < #i"
*/
by simplify

lemma adversaryCannotFindPropertiesFromThreatActor [reuse]:
  all-traces
  "∀ OTEE ch_pos ch_prop A #i #j #k.
    (((OTEEMeasure( OTEE, ch_pos, ch_prop ) @ #i) ∧
      (OUT_Threat_Actor_0( ch_prop ) @ #j)) ∧
     (AdversaryCreateAgent( A, ch_prop ) @ #k)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE ch_pos ch_prop A #i #j #k.
  (OTEEMeasure( OTEE, ch_pos, ch_prop ) @ #i) ∧
  (OUT_Threat_Actor_0( ch_prop ) @ #j) ∧
  (AdversaryCreateAgent( A, ch_prop ) @ #k)"
*/
simplify
solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
               c_hs_traffic_s, c_finish_k, c_ap_traffic_s
       ) ▶₀ #i )
  case OTEE_Receive_Server_Hello_case_1
  solve( Agent_2( ~agent_id, $A, $D, ~prop, server_pk ) ▶₁ #i )
    case Agent_Start_TLS_Connection_case_1
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  next
    case Agent_Start_TLS_Connection_case_2
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  qed
next
  case OTEE_Receive_Server_Hello_case_2
  solve( Agent_2( ~agent_id, $A, $D, ~prop, server_pk ) ▶₁ #i )
    case Agent_Start_TLS_Connection_case_1
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  next
    case Agent_Start_TLS_Connection_case_2
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  qed
next
  case OTEE_Receive_Server_Hello_case_3
  solve( Agent_2( ~agent_id, $A, $D, ~prop, server_pk ) ▶₁ #i )
    case Agent_Start_TLS_Connection_case_1
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  next
    case Agent_Start_TLS_Connection_case_2
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  qed
next
  case OTEE_Receive_Server_Hello_case_4
  solve( Agent_2( ~agent_id, $A, $D, ~prop, server_pk ) ▶₁ #i )
    case Agent_Start_TLS_Connection_case_1
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  next
    case Agent_Start_TLS_Connection_case_2
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  qed
next
  case OTEE_Receive_Server_Hello_case_5
  solve( Agent_2( ~agent_id, $A, $D, ~prop, server_pk ) ▶₁ #i )
    case Agent_Start_TLS_Connection_case_1
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  next
    case Agent_Start_TLS_Connection_case_2
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  qed
next
  case OTEE_Receive_Server_Hello_case_6
  solve( Agent_2( ~agent_id, $A, $D, ~prop, server_pk ) ▶₁ #i )
    case Agent_Start_TLS_Connection_case_1
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  next
    case Agent_Start_TLS_Connection_case_2
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  qed
next
  case OTEE_Receive_Server_Hello_case_7
  solve( Agent_2( ~agent_id, $A, $D, ~prop, server_pk ) ▶₁ #i )
    case Agent_Start_TLS_Connection_case_1
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk.1 ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  next
    case Agent_Start_TLS_Connection_case_2
    solve( splitEqs(1) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_3
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_4
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_5
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    next
      case split_case_6
      solve( Threat_Actor_0( $TA, ~prop, $A.1, ~ltk ) ▶₀ #j )
        case Threat_Actor_Create_Agent
        by solve( !KU( ~prop ) @ #vk.4 )
      qed
    qed
  qed
qed

lemma adversaryCannotLearnDeviceDHShareBeforeEnd [reuse]:
  all-traces
  "∀ OTEE D x_0 #i #j.
    ((OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (!KU( x_0 ) @ #j)) ⇒
    (∃ x_0_inv #k.
      (OTEEDHShareAndInv( OTEE, x_0, x_0_inv ) @ #k) ∧ (#k < #j))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D x_0 #i #j.
  (OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (!KU( x_0 ) @ #j)
 ∧
  ∀ x_0_inv #k.
   (OTEEDHShareAndInv( OTEE, x_0, x_0_inv ) @ #k) ⇒ ¬(#k < #j)"
*/
simplify
by contradiction /* from formulas */

lemma adversaryCannotLearnDeviceDHShareBeforeEnd2 [reuse]:
  all-traces
  "∀ OTEE D x_0_inv #i #j.
    ((OTEEHelloDHinv( OTEE, D, x_0_inv ) @ #i) ∧ (!KU( x_0_inv ) @ #j)) ⇒
    (∃ x_0 #k. (OTEEDHShareAndInv( OTEE, x_0, x_0_inv ) @ #k) ∧ (#k < #j))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D x_0_inv #i #j.
  (OTEEHelloDHinv( OTEE, D, x_0_inv ) @ #i) ∧ (!KU( x_0_inv ) @ #j)
 ∧
  ∀ x_0 #k. (OTEEDHShareAndInv( OTEE, x_0, x_0_inv ) @ #k) ⇒ ¬(#k < #j)"
*/
simplify
by contradiction /* from formulas */

lemma adversaryCannotLearnDeviceDHShareBeforeMeasurement [reuse]:
  all-traces
  "∀ OTEE D x_0 u #i #j.
    (((OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (OTEESession( OTEE, u ) @ #i)) ∧
     (!KU( x_0 ) @ #j)) ⇒
    (∃ #k.
      ((OTEEChallengeResponseDH( OTEE, x_0 ) @ #k) ∧
       (OTEESession( OTEE, u ) @ #k)) ∧
      (#k < #j))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D x_0 u #i #j.
  (OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧
  (OTEESession( OTEE, u ) @ #i) ∧
  (!KU( x_0 ) @ #j)
 ∧
  ∀ #k.
   (OTEEChallengeResponseDH( OTEE, x_0 ) @ #k) ∧
   (OTEESession( OTEE, u ) @ #k)
  ⇒
   ¬(#k < #j)"
*/
simplify
by contradiction /* from formulas */

lemma twoOTEEsCannotHaveSameShare [reuse]:
  all-traces
  "∀ OTEE OTEE2 X_1 X_1_2 x_0 DHE DHE2 #i #j.
    (((OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ∧
      (OTEEDHKey( OTEE2, X_1_2, x_0, DHE2 ) @ #j)) ∧
     (¬(#i = #j))) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE OTEE2 X_1 X_1_2 x_0 DHE DHE2 #i #j.
  (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ∧
  (OTEEDHKey( OTEE2, X_1_2, x_0, DHE2 ) @ #j)
 ∧
  ¬(#i = #j)"
*/
simplify
solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  case OTEE_Client_Hello_case_1
  solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0, pk(x)
         ) ▶₀ #j )
    case OTEE_Client_Hello
    by contradiction /* from formulas */
  qed
next
  case OTEE_Client_Hello_case_2
  solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0, pk(x.1)
         ) ▶₀ #j )
    case OTEE_Client_Hello
    by contradiction /* from formulas */
  qed
next
  case OTEE_Client_Hello_case_3
  solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0, pk(x.1)
         ) ▶₀ #j )
    case OTEE_Client_Hello
    by contradiction /* from formulas */
  qed
qed

lemma adversaryCannotKnowDHEOfHonestOTEEAndThreatAgent [reuse]:
  all-traces
  "∀ TA X_0 x_1 DHE D OTEE u X_1 x_0 #i #j #k #l.
    ((((((((ServerDHKey( TA, X_0, x_1 ) @ #i) ∧
           (ServerDHE( TA, DHE ) @ #i)) ∧
          (OTEEHelloDHg( OTEE, D, X_0 ) @ #j)) ∧
         (OTEESession( OTEE, u ) @ #j)) ∧
        (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #k)) ∧
       (OTEESession( OTEE, u ) @ #k)) ∧
      (!KU( DHE ) @ #l)) ∧
     (#l < #k)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ TA X_0 x_1 DHE D OTEE u X_1 x_0 #i #j #k #l.
  (ServerDHKey( TA, X_0, x_1 ) @ #i) ∧
  (ServerDHE( TA, DHE ) @ #i) ∧
  (OTEEHelloDHg( OTEE, D, X_0 ) @ #j) ∧
  (OTEESession( OTEE, u ) @ #j) ∧
  (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #k) ∧
  (OTEESession( OTEE, u ) @ #k) ∧
  (!KU( DHE ) @ #l)
 ∧
  #l < #k"
*/
simplify
solve( OTEESession( $OTEE, u.2 ) @ #j )
  case OTEE_Client_Hello
  solve( OTEESession( $OTEE, ~u ) @ #k )
    case OTEE_Receive_Server_Hello
    solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE, $D.1, ~u, ~x_0.1, pk(x)
           ) ▶₀ #k )
      case OTEE_Client_Hello_case_1
      solve( (∃ #j. (!KU( 'g'^~x_1 ) @ #j))  ∥
             (∀ #j. (!KU( 'g'^(~x_0*~x_1) ) @ #j) ⇒ ¬(#j < #k)) )
        case case_1
        solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
          case Threat_Actor_Create_Agent
          solve( OTEEIn( $OTEE,
                         <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                          senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                          senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                                  'finished'),
                                    <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                     sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                          ~ltk)
                                    >),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                         >
                 ) ▶₁ #k )
            case AdversaryWriteToOTEE
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #l )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEESession( $OTEE, ~u ) @ #k.1 )
                case OTEE_Challenge_Response
                solve( !KU( ~x_0 ) @ #vk.1 )
                  case AdversaryReadOTEEOut_case_1
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_2
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_3
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_4
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_5
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          next
            case DeviceOTEEChannel
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #l )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEESession( $OTEE, ~u ) @ #k.1 )
                case OTEE_Challenge_Response
                solve( !KU( ~x_0 ) @ #vk.2 )
                  case AdversaryReadOTEEOut_case_1
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_2
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_3
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_4
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_5
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case case_2
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( (∃ #j. (!KU( 'g'^~x_1 ) @ #j))  ∥
             (∀ #j. (!KU( 'g'^(~x_0*~x_1) ) @ #j) ⇒ ¬(#j < #k)) )
        case case_1
        solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
          case Threat_Actor_Create_Agent
          solve( OTEEIn( $OTEE,
                         <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                          senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                    x),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                          senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                                  'finished'),
                                    <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                     sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                          x)
                                    >),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                         >
                 ) ▶₁ #k )
            case AdversaryWriteToOTEE
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #l )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEESession( $OTEE, ~u ) @ #k.1 )
                case OTEE_Challenge_Response
                solve( !KU( ~x_0 ) @ #vk.1 )
                  case AdversaryReadOTEEOut_case_1
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_2
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_3
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_4
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_5
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          next
            case DeviceOTEEChannel
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #l )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEESession( $OTEE, ~u ) @ #k.1 )
                case OTEE_Challenge_Response
                solve( !KU( ~x_0 ) @ #vk.2 )
                  case AdversaryReadOTEEOut_case_1
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_2
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_3
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_4
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_5
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case case_2
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( (∃ #j. (!KU( 'g'^~x_1 ) @ #j))  ∥
             (∀ #j. (!KU( 'g'^(~x_0*~x_1) ) @ #j) ⇒ ¬(#j < #k)) )
        case case_1
        solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #i )
          case Threat_Actor_Create_Agent
          solve( OTEEIn( $OTEE,
                         <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                          senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                     h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                    x),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                          senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                                  'finished'),
                                    <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                                     sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                          x)
                                    >),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                         >
                 ) ▶₁ #k )
            case AdversaryWriteToOTEE
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #l )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_1
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_2
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEESession( $OTEE, ~u ) @ #k.1 )
                case OTEE_Challenge_Response
                solve( !KU( ~x_0 ) @ #vk.1 )
                  case AdversaryReadOTEEOut_case_1
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_2
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_3
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_4
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_5
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          next
            case DeviceOTEEChannel_case_1
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #l )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEESession( $OTEE, ~u ) @ #k.1 )
                case OTEE_Challenge_Response
                solve( !KU( ~x_0 ) @ #vk.1 )
                  case AdversaryReadOTEEOut_case_1
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_2
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_3
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_4
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_5
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          next
            case DeviceOTEEChannel_case_2
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #l )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEESession( $OTEE, ~u ) @ #k.1 )
                case OTEE_Challenge_Response
                solve( !KU( ~x_0 ) @ #vk.1 )
                  case AdversaryReadOTEEOut_case_1
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_2
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_3
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_4
                  by contradiction /* cyclic */
                next
                  case AdversaryReadOTEEOut_case_5
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case case_2
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma adversaryMustKnowOTEEShare [reuse]:
  all-traces
  "∀ OTEE X_1 x_0 DHE #i.
    (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ⇒
    (∃ #j. (!KU( X_1 ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE X_1 x_0 DHE #i.
  (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i)
 ∧
  ∀ #j. (!KU( X_1 ) @ #j) ⇒ ¬(#j < #i)"
*/
simplify
solve( (∃ #j. (!KU( X_1 ) @ #j))  ∥
       (∀ #j. (!KU( DHE ) @ #j) ⇒ ¬(#j < #i)) )
  case case_1
  solve( splitEqs(0) )
    case split_case_1
    by contradiction /* from formulas */
  next
    case split_case_2
    by contradiction /* from formulas */
  next
    case split_case_3
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                ~ltk),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case split_case_4
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>)>,
                                ~ltk),
                           derive_secret('g'^x, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^x, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case split_case_5
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>)>,
                                ~ltk),
                           derive_secret('g'^inv(x), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^inv(x), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case split_case_6
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x*inv((~x_0*x.1))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>)>,
                                ~ltk),
                           derive_secret('g'^(x*inv(x.1)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x*inv(x.1)), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(x*inv(x.1)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case case_2
  solve( splitEqs(0) )
    case split_case_1
    by contradiction /* from formulas */
  next
    case split_case_2
    by contradiction /* from formulas */
  next
    case split_case_3
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                ~ltk),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case split_case_4
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>)>,
                                ~ltk),
                           derive_secret('g'^x, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv(~x_0))>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^x, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case split_case_5
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>)>,
                                ~ltk),
                           derive_secret('g'^inv(x), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x))>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^inv(x), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  next
    case split_case_6
    solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
      case OTEE_Client_Hello_case_1
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x*inv((~x_0*x.1))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>)>,
                                ~ltk),
                           derive_secret('g'^(x*inv(x.1)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x*inv(x.1)), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x*inv((~x_0*x.1)))>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(x*inv(x.1)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_1
        by contradiction /* from formulas */
      next
        case DeviceOTEEChannel_case_2
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma ifOTEEConnectsToServerThenShareMustBeOutputByTheServer [reuse]:
  all-traces
  "∀ OTEE TA_pk n_1 X_1 x_0 DHE TA #i #j.
    (((OTEEReceiveServerHello( OTEE, TA_pk, n_1 ) @ #i) ∧
      (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i)) ∧
     (ThreatActorPK( TA, TA_pk ) @ #j)) ⇒
    (∃ #k. ServerDHKeyG( TA, X_1 ) @ #k)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE TA_pk n_1 X_1 x_0 DHE TA #i #j.
  (OTEEReceiveServerHello( OTEE, TA_pk, n_1 ) @ #i) ∧
  (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ∧
  (ThreatActorPK( TA, TA_pk ) @ #j)
 ∧
  ∀ #k. (ServerDHKeyG( TA, X_1 ) @ #k) ⇒ ⊥"
*/
simplify
solve( OTEEIn( $OTEE,
               <ctid, ~tee_id, 'device_forward_server_hello', n_1, X_1,
                senc(sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                          ~ltk),
                     derive_secret(DHE, 's_hs_traffic')),
                senc(hmac(derive_secret(derive_secret(DHE, 's_hs_traffic'), 'finished'),
                          <<~u, 'g'^~x_0, n_1, X_1>,
                           sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>, ~ltk)>),
                     derive_secret(DHE, 's_hs_traffic'))
               >
       ) ▶₁ #i )
  case AdversaryWriteToOTEE
  solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                         h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                        ~ltk),
                   derive_secret(DHE, 's_hs_traffic'))
         ) @ #vk.10 )
    case Server_Hello
    by contradiction /* from formulas */
  next
    case c_senc
    solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                     >,
                     ~ltk)
           ) @ #vk.12 )
      case Server_Hello
      by contradiction /* from formulas */
    next
      case c_sign
      by contradiction /* from formulas */
    qed
  qed
next
  case DeviceOTEEChannel_case_1
  solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                         h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                        ~ltk),
                   derive_secret(DHE, 's_hs_traffic'))
         ) @ #vk.4 )
    case Server_Hello
    by contradiction /* from formulas */
  next
    case c_senc
    solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                     >,
                     ~ltk)
           ) @ #vk.6 )
      case Server_Hello
      by contradiction /* from formulas */
    next
      case c_sign
      by contradiction /* from formulas */
    qed
  qed
next
  case DeviceOTEEChannel_case_2
  solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                         h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                        ~ltk),
                   derive_secret(DHE, 's_hs_traffic'))
         ) @ #vk.4 )
    case Server_Hello
    by contradiction /* from formulas */
  next
    case c_senc
    solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                     >,
                     ~ltk)
           ) @ #vk.9 )
      case Server_Hello
      by contradiction /* from formulas */
    next
      case c_sign
      by contradiction /* from formulas */
    qed
  qed
qed

lemma adversaryCannotLearnDeviceDHShareBeforeStart [reuse]:
  all-traces
  "∀ OTEE D x_0 #i #j.
    (((OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (!KU( x_0 ) @ #j)) ∧ (#j < #i)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D x_0 #i #j.
  (OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (!KU( x_0 ) @ #j) ∧ #j < #i"
*/
simplify
by contradiction /* cyclic */

lemma adversaryCannotLearnDeviceDHShareBeforeStart2 [reuse]:
  all-traces
  "∀ OTEE D x_0_inv #i #j.
    (((OTEEHelloDHinv( OTEE, D, x_0_inv ) @ #i) ∧ (!KU( x_0_inv ) @ #j)) ∧
     (#j < #i)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D x_0_inv #i #j.
  (OTEEHelloDHinv( OTEE, D, x_0_inv ) @ #i) ∧ (!KU( x_0_inv ) @ #j)
 ∧
  #j < #i"
*/
simplify
by contradiction /* cyclic */

lemma ifServerAndOTEEHaveSameKeyThenTHeyCommunicated [reuse]:
  all-traces
  "∀ OTEE X_1 x_0 DHE TA ltk pk_ltk #i #j.
    (((OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ∧
      (ServerDHE( TA, DHE ) @ #j)) ∧
     (ThreatActorServerHelloPK( TA, ltk, pk_ltk ) @ #j)) ⇒
    (∃ n_1. OTEEReceiveServerHello( OTEE, pk_ltk, n_1 ) @ #i)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE X_1 x_0 DHE TA ltk pk_ltk #i #j.
  (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ∧
  (ServerDHE( TA, DHE ) @ #j) ∧
  (ThreatActorServerHelloPK( TA, ltk, pk_ltk ) @ #j)
 ∧
  ∀ n_1. (OTEEReceiveServerHello( OTEE, pk_ltk, n_1 ) @ #i) ⇒ ⊥"
*/
simplify
solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #j )
  case Threat_Actor_Create_Agent
  solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
    case OTEE_Client_Hello_case_1
    by contradiction /* from formulas */
  next
    case OTEE_Client_Hello_case_2
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1, X_1,
                    senc(sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>, x),
                         derive_secret(DHE, 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret(DHE, 's_hs_traffic'), 'finished'),
                              <<~u, 'g'^~x_0, n_1, X_1>,
                               sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>, x)>),
                         derive_secret(DHE, 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                             h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                            x),
                       derive_secret(DHE, 's_hs_traffic'))
             ) @ #vk.16 )
        case Server_Hello
        by contradiction /* from formulas */
      next
        case c_senc
        solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                         >,
                         x)
               ) @ #vk.18 )
          case Server_Hello
          by contradiction /* from formulas */
        next
          case c_sign
          solve( splitEqs(0) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            by contradiction /* from formulas */
          next
            case split_case_3
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.22 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case split_case_2
              solve( !KU( 'g'^(~x_0*x_1*inv(~x_1.1)) ) @ #vk.13 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( 'g'^(~x_0*inv((~x_1*x.1))) ) @ #vk.13 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic')
                     ) @ #vk.22 )
                case c_derive_secret
                solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>) ) @ #vk.27 )
                  case c_h3
                  solve( !KU( 'g'^(~x_0*~x_1*x.1) ) @ #vk.28 )
                    case AdversaryReadOTEEOut_case_01
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_02
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_03
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_04
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_05
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_06
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_07
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_08
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_09
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_10
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_13
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_1
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_2
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_3
                    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                   int_indicator
                           ) ▶₀ #k )
                      case Continue_OTEE_Interrupt_With_Agent_case_1
                      by contradiction /* cyclic */
                    next
                      case Continue_OTEE_Interrupt_With_Agent_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_1
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_Prepared_Memory_Read
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_exp
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_5
              solve( !KU( 'g'^(~x_0*x.1*inv((~x_1*x.2))) ) @ #vk.13 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( splitEqs(1) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x_0.1*inv(~x_0))>)
                     ) @ #vk.27 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x_0.1*inv(~x_0)) ) @ #j.2 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.22 )
                case c_derive_secret
                solve( (∃ #j. (!KU( 'g'^(x.1*inv(~x_0)) ) @ #j))  ∥
                       (∀ #j. (!KU( 'g'^x.1 ) @ #j) ⇒ ¬(#j < #i)) )
                  case case_1
                  solve( !KU( 'g'^x.1 ) @ #vk.28 )
                    case AdversaryReadOTEEOut_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_06
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Server_Hello_case_1
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv(~x_0))>) ) @ #vk.28 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*inv(~x_0)) ) @ #j.2 )
                        case Server_Hello
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case Server_Hello_case_2
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv(~x_0))>)
                           ) @ #vk.28 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*x.1*inv(~x_0)) ) @ #j.2 )
                        case AdversaryReadOTEEOut_case_01
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_02
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_03
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_04
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_05
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_06
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_07
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_08
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_09
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_01
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_02
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_03
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_04
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_05
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_06
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_07
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_08
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_09
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_11
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_12
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_1
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_2
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case Server_Hello_case_3
                        by contradiction /* from formulas */
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( 'g'^(x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case split_case_5
            solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.21 )
              case c_derive_secret
              solve( !KU( 'g'^inv((~x_1*x.1)) ) @ #vk.14 )
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv((~x_0*x.1)))>)
                     ) @ #vk.27 )
                case c_h3
                solve( !KU( 'g'^(~x_1*inv((~x_0*x.1))) ) @ #j.2 )
                  case Server_Hello
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                     ) @ #vk.22 )
                case c_derive_secret
                solve( !KU( 'g'^(x.1*inv((~x_1*x.2))) ) @ #vk.15 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv((~x_0*x.2)))>)
                     ) @ #vk.27 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x.1*inv((~x_0*x.2))) ) @ #j.2 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case DeviceOTEEChannel
      solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                             h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                            x),
                       derive_secret(DHE, 's_hs_traffic'))
             ) @ #vk.10 )
        case Server_Hello
        by contradiction /* from formulas */
      next
        case c_senc
        solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                         >,
                         x)
               ) @ #vk.12 )
          case Server_Hello
          by contradiction /* from formulas */
        next
          case c_sign
          solve( splitEqs(0) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            by contradiction /* from formulas */
          next
            case split_case_3
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.16 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case split_case_2
              solve( !KU( 'g'^(~x_0*x_1*inv(~x_1.1)) ) @ #vk.10 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( 'g'^(~x_0*inv((~x_1*x.1))) ) @ #vk.10 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic')
                     ) @ #vk.16 )
                case c_derive_secret
                solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>) ) @ #vk.21 )
                  case c_h3
                  solve( !KU( 'g'^(~x_0*~x_1*x.1) ) @ #vk.22 )
                    case AdversaryReadOTEEOut_case_01
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_02
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_03
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_04
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_05
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_06
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_07
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_08
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_09
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_10
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_13
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_1
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_2
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_3
                    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                   int_indicator
                           ) ▶₀ #k )
                      case Continue_OTEE_Interrupt_With_Agent_case_1
                      by contradiction /* cyclic */
                    next
                      case Continue_OTEE_Interrupt_With_Agent_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_1
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_Prepared_Memory_Read
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_exp
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_5
              solve( !KU( 'g'^(~x_0*x.1*inv((~x_1*x.2))) ) @ #vk.10 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( splitEqs(1) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x_0.1*inv(~x_0))>)
                     ) @ #vk.21 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x_0.1*inv(~x_0)) ) @ #j.1 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.16 )
                case c_derive_secret
                solve( (∃ #j. (!KU( 'g'^(x.1*inv(~x_0)) ) @ #j))  ∥
                       (∀ #j. (!KU( 'g'^x.1 ) @ #j) ⇒ ¬(#j < #i)) )
                  case case_1
                  solve( !KU( 'g'^x.1 ) @ #vk.22 )
                    case AdversaryReadOTEEOut_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_06
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Server_Hello_case_1
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv(~x_0))>) ) @ #vk.22 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*inv(~x_0)) ) @ #j.1 )
                        case Server_Hello
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case Server_Hello_case_2
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv(~x_0))>)
                           ) @ #vk.22 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*x.1*inv(~x_0)) ) @ #j.1 )
                        case AdversaryReadOTEEOut_case_01
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_02
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_03
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_04
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_05
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_06
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_07
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_08
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_09
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_01
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_02
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_03
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_04
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_05
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_06
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_07
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_08
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_09
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_11
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_12
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_1
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_2
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case Server_Hello_case_3
                        by contradiction /* from formulas */
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( 'g'^(x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case split_case_5
            solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.15 )
              case c_derive_secret
              solve( !KU( 'g'^inv((~x_1*x.1)) ) @ #vk.11 )
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv((~x_0*x.1)))>)
                     ) @ #vk.21 )
                case c_h3
                solve( !KU( 'g'^(~x_1*inv((~x_0*x.1))) ) @ #j.1 )
                  case Server_Hello
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                     ) @ #vk.16 )
                case c_derive_secret
                solve( !KU( 'g'^(x.1*inv((~x_1*x.2))) ) @ #vk.12 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv((~x_0*x.2)))>)
                     ) @ #vk.21 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x.1*inv((~x_0*x.2))) ) @ #j.1 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case OTEE_Client_Hello_case_3
    solve( OTEEIn( $OTEE,
                   <ctid, ~tee_id, 'device_forward_server_hello', n_1, X_1,
                    senc(sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>, x),
                         derive_secret(DHE, 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret(DHE, 's_hs_traffic'), 'finished'),
                              <<~u, 'g'^~x_0, n_1, X_1>,
                               sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)>, x)>),
                         derive_secret(DHE, 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                             h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                            x),
                       derive_secret(DHE, 's_hs_traffic'))
             ) @ #vk.17 )
        case Server_Hello
        by contradiction /* from formulas */
      next
        case c_senc
        solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                         >,
                         x)
               ) @ #vk.19 )
          case Server_Hello
          by contradiction /* from formulas */
        next
          case c_sign
          solve( splitEqs(0) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            by contradiction /* from formulas */
          next
            case split_case_3
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.23 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case split_case_2
              solve( !KU( 'g'^(~x_0*x_1*inv(~x_1.1)) ) @ #vk.13 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_14
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( 'g'^(~x_0*inv((~x_1*x.1))) ) @ #vk.13 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_1
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic')
                     ) @ #vk.23 )
                case c_derive_secret
                solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>) ) @ #vk.28 )
                  case c_h3
                  solve( !KU( 'g'^(~x_0*~x_1*x.1) ) @ #vk.29 )
                    case AdversaryReadOTEEOut_case_01
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_02
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_03
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_04
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_05
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_06
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_07
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_08
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_09
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_10
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_13
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_14
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_1
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_2
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_3
                    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                   int_indicator
                           ) ▶₀ #k )
                      case Continue_OTEE_Interrupt_With_Agent_case_1
                      by contradiction /* cyclic */
                    next
                      case Continue_OTEE_Interrupt_With_Agent_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_1
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_Prepared_Memory_Read
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_exp
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_5
              solve( !KU( 'g'^(~x_0*x.1*inv((~x_1*x.2))) ) @ #vk.13 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_14
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( splitEqs(1) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x_0.1*inv(~x_0))>)
                     ) @ #vk.28 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x_0.1*inv(~x_0)) ) @ #j.3 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.23 )
                case c_derive_secret
                solve( (∃ #j. (!KU( 'g'^(x.1*inv(~x_0)) ) @ #j))  ∥
                       (∀ #j. (!KU( 'g'^x.1 ) @ #j) ⇒ ¬(#j < #i)) )
                  case case_1
                  solve( !KU( 'g'^x.1 ) @ #vk.29 )
                    case AdversaryReadOTEEOut_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_06
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.16 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Server_Hello_case_1
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv(~x_0))>) ) @ #vk.29 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*inv(~x_0)) ) @ #j.3 )
                        case Server_Hello
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case Server_Hello_case_2
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv(~x_0))>)
                           ) @ #vk.29 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*x.1*inv(~x_0)) ) @ #j.3 )
                        case AdversaryReadOTEEOut_case_01
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_02
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_03
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_04
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_05
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_06
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_07
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_08
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_09
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_01
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_02
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_03
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_04
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_05
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_06
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_07
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_08
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_09
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_11
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_12
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_1
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_2
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case Server_Hello_case_3
                        by contradiction /* from formulas */
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( 'g'^(x.1*inv(~x_1)) ) @ #vk.16 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case split_case_5
            solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.22 )
              case c_derive_secret
              solve( !KU( 'g'^inv((~x_1*x.1)) ) @ #vk.14 )
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv((~x_0*x.1)))>)
                     ) @ #vk.28 )
                case c_h3
                solve( !KU( 'g'^(~x_1*inv((~x_0*x.1))) ) @ #j.3 )
                  case Server_Hello
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                     ) @ #vk.23 )
                case c_derive_secret
                solve( !KU( 'g'^(x.1*inv((~x_1*x.2))) ) @ #vk.15 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv((~x_0*x.2)))>)
                     ) @ #vk.28 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x.1*inv((~x_0*x.2))) ) @ #j.3 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case DeviceOTEEChannel_case_1
      solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                             h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                            x),
                       derive_secret(DHE, 's_hs_traffic'))
             ) @ #vk.12 )
        case Server_Hello
        by contradiction /* from formulas */
      next
        case c_senc
        solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                         >,
                         x)
               ) @ #vk.14 )
          case Server_Hello
          by contradiction /* from formulas */
        next
          case c_sign
          solve( splitEqs(0) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            by contradiction /* from formulas */
          next
            case split_case_3
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.18 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case split_case_2
              solve( !KU( 'g'^(~x_0*x_1*inv(~x_1.1)) ) @ #vk.10 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( 'g'^(~x_0*inv((~x_1*x.1))) ) @ #vk.10 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic')
                     ) @ #vk.18 )
                case c_derive_secret
                solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>) ) @ #vk.23 )
                  case c_h3
                  solve( !KU( 'g'^(~x_0*~x_1*x.1) ) @ #vk.24 )
                    case AdversaryReadOTEEOut_case_01
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_02
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_03
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_04
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_05
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_06
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_07
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_08
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_09
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_10
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_13
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_1
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_2
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_3
                    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                   int_indicator
                           ) ▶₀ #k )
                      case Continue_OTEE_Interrupt_With_Agent_case_1
                      by contradiction /* cyclic */
                    next
                      case Continue_OTEE_Interrupt_With_Agent_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_1
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_Prepared_Memory_Read
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_exp
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_5
              solve( !KU( 'g'^(~x_0*x.1*inv((~x_1*x.2))) ) @ #vk.10 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( splitEqs(1) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x_0.1*inv(~x_0))>)
                     ) @ #vk.23 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x_0.1*inv(~x_0)) ) @ #j.3 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.18 )
                case c_derive_secret
                solve( (∃ #j. (!KU( 'g'^(x.1*inv(~x_0)) ) @ #j))  ∥
                       (∀ #j. (!KU( 'g'^x.1 ) @ #j) ⇒ ¬(#j < #i)) )
                  case case_1
                  solve( !KU( 'g'^x.1 ) @ #vk.24 )
                    case AdversaryReadOTEEOut_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_06
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Server_Hello_case_1
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv(~x_0))>) ) @ #vk.24 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*inv(~x_0)) ) @ #j.3 )
                        case Server_Hello
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case Server_Hello_case_2
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv(~x_0))>)
                           ) @ #vk.24 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*x.1*inv(~x_0)) ) @ #j.3 )
                        case AdversaryReadOTEEOut_case_01
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_02
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_03
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_04
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_05
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_06
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_07
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_08
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_09
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_01
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_02
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_03
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_04
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_05
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_06
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_07
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_08
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_09
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_11
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_12
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_1
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_2
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case Server_Hello_case_3
                        by contradiction /* from formulas */
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( 'g'^(x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case split_case_5
            solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.17 )
              case c_derive_secret
              solve( !KU( 'g'^inv((~x_1*x.1)) ) @ #vk.11 )
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv((~x_0*x.1)))>)
                     ) @ #vk.23 )
                case c_h3
                solve( !KU( 'g'^(~x_1*inv((~x_0*x.1))) ) @ #j.3 )
                  case Server_Hello
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                     ) @ #vk.18 )
                case c_derive_secret
                solve( !KU( 'g'^(x.1*inv((~x_1*x.2))) ) @ #vk.12 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv((~x_0*x.2)))>)
                     ) @ #vk.23 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x.1*inv((~x_0*x.2))) ) @ #j.3 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case DeviceOTEEChannel_case_2
      solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, X_1>,
                             h3(<~u, 'g'^~x_0, n_1, X_1>)>,
                            x),
                       derive_secret(DHE, 's_hs_traffic'))
             ) @ #vk.12 )
        case Server_Hello
        by contradiction /* from formulas */
      next
        case c_senc
        solve( !KU( sign(<<~u, 'g'^~x_0, n_1, X_1>, h3(<~u, 'g'^~x_0, n_1, X_1>)
                         >,
                         x)
               ) @ #vk.17 )
          case Server_Hello
          by contradiction /* from formulas */
        next
          case c_sign
          solve( splitEqs(0) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            by contradiction /* from formulas */
          next
            case split_case_3
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.21 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case split_case_2
              solve( !KU( 'g'^(~x_0*x_1*inv(~x_1.1)) ) @ #vk.10 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( 'g'^(~x_0*inv((~x_1*x.1))) ) @ #vk.10 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( derive_secret('g'^(~x_0*~x_1*x.1), 's_hs_traffic')
                     ) @ #vk.21 )
                case c_derive_secret
                solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1)>) ) @ #vk.26 )
                  case c_h3
                  solve( !KU( 'g'^(~x_0*~x_1*x.1) ) @ #vk.27 )
                    case AdversaryReadOTEEOut_case_01
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_02
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_03
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_04
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_05
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_06
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_07
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_08
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_09
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_10
                    by contradiction /* from formulas */
                  next
                    case AdversaryReadOTEEOut_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    by contradiction /* from formulas */
                  next
                    case Device_Forward_OTEE_Client_Hello_case_13
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_1
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_2
                    by contradiction /* from formulas */
                  next
                    case Server_Hello_case_3
                    solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                   int_indicator
                           ) ▶₀ #k )
                      case Continue_OTEE_Interrupt_With_Agent_case_1
                      by contradiction /* cyclic */
                    next
                      case Continue_OTEE_Interrupt_With_Agent_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_1
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_OTEE_Memory_Read_case_2
                      by contradiction /* cyclic */
                    next
                      case No_Interrupt_Prepared_Memory_Read
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_exp
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_5
              solve( !KU( 'g'^(~x_0*x.1*inv((~x_1*x.2))) ) @ #vk.10 )
                case AdversaryReadOTEEOut_case_01
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_02
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_03
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_04
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_05
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_06
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_07
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_08
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_09
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_10
                by contradiction /* from formulas */
              next
                case AdversaryReadOTEEOut_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_01
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_02
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_03
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_04
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_05
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_06
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_07
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_08
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_09
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_10
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_11
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_12
                by contradiction /* from formulas */
              next
                case Device_Forward_OTEE_Client_Hello_case_13
                by contradiction /* from formulas */
              next
                case Server_Hello_case_1
                by contradiction /* from formulas */
              next
                case Server_Hello_case_2
                by contradiction /* from formulas */
              next
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( splitEqs(1) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x_0.1*inv(~x_0))>)
                     ) @ #vk.26 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x_0.1*inv(~x_0)) ) @ #j.3 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.21 )
                case c_derive_secret
                solve( (∃ #j. (!KU( 'g'^(x.1*inv(~x_0)) ) @ #j))  ∥
                       (∀ #j. (!KU( 'g'^x.1 ) @ #j) ⇒ ¬(#j < #i)) )
                  case case_1
                  solve( !KU( 'g'^x.1 ) @ #vk.27 )
                    case AdversaryReadOTEEOut_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_06
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case AdversaryReadOTEEOut_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_01
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_02
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_03
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_04
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_05
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_06
                    solve( !KU( 'g'^(~x_0.1*inv(~x_1)) ) @ #vk.13 )
                      case Device_Forward_OTEE_Client_Hello
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_07
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_08
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_09
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_10
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_11
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Device_Forward_OTEE_Client_Hello_case_12
                    solve( !KU( 'g'^(~x_0.1*x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_13
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  next
                    case Server_Hello_case_1
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv(~x_0))>) ) @ #vk.27 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*inv(~x_0)) ) @ #j.3 )
                        case Server_Hello
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case Server_Hello_case_2
                    solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv(~x_0))>)
                           ) @ #vk.27 )
                      case c_h3
                      solve( !KU( 'g'^(~x_1*x.1*inv(~x_0)) ) @ #j.3 )
                        case AdversaryReadOTEEOut_case_01
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_02
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_03
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_04
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_05
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_06
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_07
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_08
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_09
                        by contradiction /* from formulas */
                      next
                        case AdversaryReadOTEEOut_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_01
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_02
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_03
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_04
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_05
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_06
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_07
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_08
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_09
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_10
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_11
                        by contradiction /* from formulas */
                      next
                        case Device_Forward_OTEE_Client_Hello_case_12
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_1
                        by contradiction /* from formulas */
                      next
                        case Server_Hello_case_2
                        solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                       int_indicator
                               ) ▶₀ #k )
                          case Continue_OTEE_Interrupt_With_Agent_case_1
                          by contradiction /* cyclic */
                        next
                          case Continue_OTEE_Interrupt_With_Agent_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_1
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_OTEE_Memory_Read_case_2
                          by contradiction /* cyclic */
                        next
                          case No_Interrupt_Prepared_Memory_Read
                          by contradiction /* cyclic */
                        qed
                      next
                        case Server_Hello_case_3
                        by contradiction /* from formulas */
                      next
                        case c_exp
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_exp
                    solve( !KU( 'g'^(x.1*inv(~x_1)) ) @ #vk.13 )
                      case AdversaryReadOTEEOut_case_01
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_02
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_03
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_04
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_05
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_06
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_07
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_08
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_09
                      by contradiction /* from formulas */
                    next
                      case AdversaryReadOTEEOut_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_01
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_02
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_03
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_04
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_05
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_06
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_07
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_08
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_09
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_10
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_11
                      by contradiction /* from formulas */
                    next
                      case Device_Forward_OTEE_Client_Hello_case_12
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_1
                      by contradiction /* from formulas */
                    next
                      case Server_Hello_case_2
                      by contradiction /* from formulas */
                    next
                      case c_exp
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case split_case_5
            solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.20 )
              case c_derive_secret
              solve( !KU( 'g'^inv((~x_1*x.1)) ) @ #vk.11 )
                case c_exp
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*inv((~x_0*x.1)))>)
                     ) @ #vk.26 )
                case c_h3
                solve( !KU( 'g'^(~x_1*inv((~x_0*x.1))) ) @ #j.3 )
                  case Server_Hello
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                     ) @ #vk.21 )
                case c_derive_secret
                solve( !KU( 'g'^(x.1*inv((~x_1*x.2))) ) @ #vk.12 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*x.1*inv((~x_0*x.2)))>)
                     ) @ #vk.26 )
                case c_h3
                solve( !KU( 'g'^(~x_1*x.1*inv((~x_0*x.2))) ) @ #j.3 )
                  case AdversaryReadOTEEOut_case_01
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_02
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_03
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_04
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_05
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_06
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_07
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_08
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_09
                  by contradiction /* from formulas */
                next
                  case AdversaryReadOTEEOut_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_01
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_02
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_03
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_04
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_05
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_06
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_07
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_08
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_09
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_10
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_11
                  by contradiction /* from formulas */
                next
                  case Device_Forward_OTEE_Client_Hello_case_12
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_1
                  by contradiction /* from formulas */
                next
                  case Server_Hello_case_2
                  solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                                 c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                                 int_indicator
                         ) ▶₀ #k )
                    case Continue_OTEE_Interrupt_With_Agent_case_1
                    by contradiction /* cyclic */
                  next
                    case Continue_OTEE_Interrupt_With_Agent_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_1
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_OTEE_Memory_Read_case_2
                    by contradiction /* cyclic */
                  next
                    case No_Interrupt_Prepared_Memory_Read
                    by contradiction /* cyclic */
                  qed
                next
                  case Server_Hello_case_3
                  by contradiction /* from formulas */
                next
                  case c_exp
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma OTEEOrder [reuse]:
  all-traces
  "∀ OTEE x_0 u pk_ltk n_1 #i #j.
    (((((OTEEChallengeResponseDH( OTEE, x_0 ) @ #i) ∧
        (OTEESession( OTEE, u ) @ #i)) ∧
       (OTEEReceiveServerHello( OTEE, pk_ltk, n_1 ) @ #j)) ∧
      (OTEESession( OTEE, u ) @ #j)) ∧
     (#i < #j)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE x_0 u pk_ltk n_1 #i #j.
  (OTEEChallengeResponseDH( OTEE, x_0 ) @ #i) ∧
  (OTEESession( OTEE, u ) @ #i) ∧
  (OTEEReceiveServerHello( OTEE, pk_ltk, n_1 ) @ #j) ∧
  (OTEESession( OTEE, u ) @ #j)
 ∧
  #i < #j"
*/
simplify
solve( OTEESession( $OTEE, u.2 ) @ #i )
  case OTEE_Challenge_Response
  solve( OTEESession( $OTEE, ~u ) @ #j )
    case OTEE_Receive_Server_Hello
    solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE, $D.1, ~u, ~x_0.1, pk(x.1)
           ) ▶₀ #j )
      case OTEE_Client_Hello_case_1
      solve( OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                     c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                     int_indicator
             ) ▶₀ #i )
        case Continue_OTEE_Interrupt_With_Agent_case_1
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_2
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_3
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_4
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_1
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_2
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_3
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_4
        by contradiction /* cyclic */
      next
        case No_Interrupt_Prepared_Memory_Read_case_1
        by contradiction /* cyclic */
      next
        case No_Interrupt_Prepared_Memory_Read_case_2
        by contradiction /* cyclic */
      qed
    next
      case OTEE_Client_Hello_case_2
      solve( OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                     c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                     int_indicator
             ) ▶₀ #i )
        case Continue_OTEE_Interrupt_With_Agent_case_1
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_2
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_3
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_4
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_1
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_2
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_3
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_4
        by contradiction /* cyclic */
      next
        case No_Interrupt_Prepared_Memory_Read_case_1
        by contradiction /* cyclic */
      next
        case No_Interrupt_Prepared_Memory_Read_case_2
        by contradiction /* cyclic */
      qed
    next
      case OTEE_Client_Hello_case_3
      solve( OTEE_3( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                     c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                     int_indicator
             ) ▶₀ #i )
        case Continue_OTEE_Interrupt_With_Agent_case_1
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_2
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_3
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_4
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_5
        by contradiction /* cyclic */
      next
        case Continue_OTEE_Interrupt_With_Agent_case_6
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_1
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_2
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_3
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_4
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_5
        by contradiction /* cyclic */
      next
        case No_Interrupt_OTEE_Memory_Read_case_6
        by contradiction /* cyclic */
      next
        case No_Interrupt_Prepared_Memory_Read_case_1
        by contradiction /* cyclic */
      next
        case No_Interrupt_Prepared_Memory_Read_case_2
        by contradiction /* cyclic */
      next
        case No_Interrupt_Prepared_Memory_Read_case_3
        by contradiction /* cyclic */
      qed
    qed
  qed
qed

lemma AdversaryKnowsDHEOnlyIfItKnowsTheShare [reuse]:
  all-traces
  "∀ OTEE x_1 x_0 DHE #i #j.
    (((PropertyHelper( OTEE, x_1, x_0, DHE ) @ #i) ∧ (!KU( DHE ) @ #j)) ∧
     (#j < #i)) ⇒
    (∃ #k. (!KU( x_1 ) @ #k) ∧ (#k < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE x_1 x_0 DHE #i #j.
  (PropertyHelper( OTEE, x_1, x_0, DHE ) @ #i) ∧ (!KU( DHE ) @ #j)
 ∧
  (#j < #i) ∧ (∀ #k. (!KU( x_1 ) @ #k) ⇒ ¬(#k < #i))"
*/
simplify
solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  case OTEE_Client_Hello_case_1
  solve( !KU( 'g'^(~x_0*~x_1) ) @ #j )
    case AdversaryReadOTEEOut
    by contradiction /* from formulas */
  next
    case Device_Forward_OTEE_Client_Hello
    by contradiction /* from formulas */
  next
    case Server_Hello
    by contradiction /* from formulas */
  next
    case c_exp
    by contradiction /* from formulas */
  qed
next
  case OTEE_Client_Hello_case_2
  solve( splitEqs(0) )
    case split_case_1
    by contradiction /* from formulas */
  next
    case split_case_2
    by contradiction /* from formulas */
  next
    case split_case_3
    solve( !KU( 'g'^(~x_0*x_1) ) @ #j )
      case AdversaryReadOTEEOut_case_01
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_02
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_03
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_04
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_05
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_06
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_07
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_08
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_09
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_10
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_01
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_02
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_03
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_04
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_05
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_06
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_07
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_08
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_09
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_12
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_13
      by contradiction /* from formulas */
    next
      case Server_Hello_case_1
      by contradiction /* from formulas */
    next
      case Server_Hello_case_2
      by contradiction /* from formulas */
    next
      case c_exp
      by contradiction /* from formulas */
    qed
  next
    case split_case_4
    solve( !KU( 'g'^(x.1*inv(~x_0)) ) @ #j.1 )
      case AdversaryReadOTEEOut_case_01
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_02
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_03
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_04
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_05
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_06
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_07
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_08
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_09
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_01
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_02
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_03
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_04
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_05
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_06
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_07
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_08
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_09
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_12
      by contradiction /* from formulas */
    next
      case Server_Hello_case_1
      by contradiction /* from formulas */
    next
      case Server_Hello_case_2
      by contradiction /* from formulas */
    next
      case c_exp
      by contradiction /* from formulas */
    qed
  next
    case split_case_5
    solve( !KU( 'g'^inv((~x_0*x.1)) ) @ #j.1 )
      case c_exp
      by contradiction /* from formulas */
    qed
  next
    case split_case_6
    solve( !KU( 'g'^(x.1*inv((~x_0*x.2))) ) @ #j.1 )
      case AdversaryReadOTEEOut_case_01
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_02
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_03
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_04
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_05
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_06
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_07
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_08
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_09
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_01
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_02
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_03
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_04
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_05
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_06
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_07
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_08
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_09
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_12
      by contradiction /* from formulas */
    next
      case Server_Hello_case_1
      by contradiction /* from formulas */
    next
      case Server_Hello_case_2
      by contradiction /* from formulas */
    next
      case c_exp
      by contradiction /* from formulas */
    qed
  qed
next
  case OTEE_Client_Hello_case_3
  solve( splitEqs(0) )
    case split_case_1
    by contradiction /* from formulas */
  next
    case split_case_2
    by contradiction /* from formulas */
  next
    case split_case_3
    solve( !KU( 'g'^(~x_0*x_1) ) @ #j.1 )
      case AdversaryReadOTEEOut_case_01
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_02
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_03
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_04
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_05
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_06
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_07
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_08
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_09
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_10
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_01
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_02
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_03
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_04
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_05
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_06
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_07
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_08
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_09
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_12
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_13
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_14
      by contradiction /* from formulas */
    next
      case Server_Hello_case_1
      by contradiction /* from formulas */
    next
      case Server_Hello_case_2
      by contradiction /* from formulas */
    next
      case c_exp
      by contradiction /* from formulas */
    qed
  next
    case split_case_4
    solve( !KU( 'g'^(x.1*inv(~x_0)) ) @ #j.2 )
      case AdversaryReadOTEEOut_case_01
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_02
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_03
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_04
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_05
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_06
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_07
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_08
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_09
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_01
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_02
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_03
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_04
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_05
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_06
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_07
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_08
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_09
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_12
      by contradiction /* from formulas */
    next
      case Server_Hello_case_1
      by contradiction /* from formulas */
    next
      case Server_Hello_case_2
      by contradiction /* from formulas */
    next
      case c_exp
      by contradiction /* from formulas */
    qed
  next
    case split_case_5
    solve( !KU( 'g'^inv((~x_0*x.1)) ) @ #j.2 )
      case c_exp
      by contradiction /* from formulas */
    qed
  next
    case split_case_6
    solve( !KU( 'g'^(x.1*inv((~x_0*x.2))) ) @ #j.2 )
      case AdversaryReadOTEEOut_case_01
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_02
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_03
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_04
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_05
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_06
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_07
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_08
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_09
      by contradiction /* from formulas */
    next
      case AdversaryReadOTEEOut_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_01
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_02
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_03
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_04
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_05
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_06
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_07
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_08
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_09
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_10
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_11
      by contradiction /* from formulas */
    next
      case Device_Forward_OTEE_Client_Hello_case_12
      by contradiction /* from formulas */
    next
      case Server_Hello_case_1
      by contradiction /* from formulas */
    next
      case Server_Hello_case_2
      by contradiction /* from formulas */
    next
      case c_exp
      by contradiction /* from formulas */
    qed
  qed
qed

lemma twoOTEEsCannotHaveSameDHE [reuse]:
  all-traces
  "∀ OTEE OTEE2 X_1 X_1_2 x_0 x_0_2 DHE #i #j.
    (((OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ∧
      (OTEEDHKey( OTEE2, X_1_2, x_0_2, DHE ) @ #j)) ∧
     (¬(#i = #j))) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE OTEE2 X_1 X_1_2 x_0 x_0_2 DHE #i #j.
  (OTEEDHKey( OTEE, X_1, x_0, DHE ) @ #i) ∧
  (OTEEDHKey( OTEE2, X_1_2, x_0_2, DHE ) @ #j)
 ∧
  ¬(#i = #j)"
*/
simplify
solve( OTEE_0( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, pk(x) ) ▶₀ #i )
  case OTEE_Client_Hello_case_1
  solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, pk(x)
         ) ▶₀ #j )
    case OTEE_Client_Hello_case_1
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                    ~ltk)
                              >),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      solve( OTEEIn( $OTEE.1,
                     <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^~x_1.1,
                      senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>,
                                 sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>,
                                       h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #j )
        case AdversaryWriteToOTEE
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.18 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.27 )
            case Server_Hello
            solve( splitEqs(1) )
              case split
              by contradiction /* from formulas */
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.29 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.31 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.29 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.17 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.22 )
            case Server_Hello
            by solve( splitEqs(1) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.24 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.26 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.24 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case DeviceOTEEChannel
      solve( OTEEIn( $OTEE.1,
                     <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^~x_1.1,
                      senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>,
                                 sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>,
                                       h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1.1>)>,
                                      ~ltk)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #j )
        case AdversaryWriteToOTEE
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.11 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.22 )
            case Server_Hello
            by solve( splitEqs(1) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.24 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.26 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.24 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.11 )
          case Server_Hello
          solve( splitEqs(5) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.16 )
              case Server_Hello
              solve( splitEqs(1) )
                case split
                by contradiction /* from formulas */
              qed
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.18 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.20 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.16 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.18 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.16 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.18 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_5
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.16 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.18 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.16 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.18 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.18 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case OTEE_Client_Hello_case_2
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                    ~ltk)
                              >),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      solve( OTEEIn( $OTEE.1,
                     <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                      senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                       h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #j )
        case AdversaryWriteToOTEE
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.18 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.27 )
            case Server_Hello
            by solve( splitEqs(1) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.32 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.34 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.29 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.17 )
          case Server_Hello
          solve( splitEqs(5) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.29 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_5
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.24 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case DeviceOTEEChannel
      solve( OTEEIn( $OTEE.1,
                     <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                      senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                       h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #j )
        case AdversaryWriteToOTEE
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.11 )
          case Server_Hello
          solve( splitEqs(5) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.29 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_5
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.27 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.24 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.11 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.16 )
            case Server_Hello
            by solve( splitEqs(5) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.21 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.23 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.18 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case OTEE_Client_Hello_case_3
    solve( OTEEIn( $OTEE,
                   <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^~x_1,
                    senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                    senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                            'finished'),
                              <<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                                    ~ltk)
                              >),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   >
           ) ▶₁ #i )
      case AdversaryWriteToOTEE
      solve( OTEEIn( $OTEE.1,
                     <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                      senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                       h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #j )
        case AdversaryWriteToOTEE
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.21 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.28 )
            case Server_Hello
            by solve( splitEqs(1) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.33 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.30 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.19 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.24 )
            case Server_Hello
            by solve( splitEqs(1) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.29 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.31 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.26 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.19 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.24 )
            case Server_Hello
            by solve( splitEqs(1) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.32 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.34 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.29 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case DeviceOTEEChannel
      solve( OTEEIn( $OTEE.1,
                     <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                      senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                x),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                 sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                       h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #j )
        case AdversaryWriteToOTEE
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.14 )
          case Server_Hello
          solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                 h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.23 )
            case Server_Hello
            by solve( splitEqs(1) )
          next
            case c_senc
            solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                              h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                             ~ltk)
                   ) @ #vk.28 )
              case Server_Hello
              solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                case c_derive_secret
                by contradiction /* from formulas */
              qed
            next
              case c_sign
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.25 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.13 )
          case Server_Hello
          solve( splitEqs(5) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.23 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.25 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.23 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.23 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_5
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.23 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.23 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.20 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.13 )
          case Server_Hello
          solve( splitEqs(5) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.26 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.28 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.26 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_4
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.26 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_5
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.26 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_6
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.18 )
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.26 )
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                            h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                           ~ltk)
                 ) @ #vk.23 )
            case Server_Hello
            by contradiction /* from formulas */
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case OTEE_Client_Hello_case_2
  solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, pk(x.1)
         ) ▶₀ #j )
    case OTEE_Client_Hello_case_1
    solve( splitEqs(0) )
      case split
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(~x_1*~x_0.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^~x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                        ~ltk)
                                  >),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.39 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.17 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.34 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^~x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                        ~ltk)
                                  >),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.34 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.18 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.18 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case OTEE_Client_Hello_case_2
    solve( splitEqs(0) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      by contradiction /* from formulas */
    next
      case split_case_3
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.18 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.26 )
              case Server_Hello
              solve( splitEqs(1) )
                case split
                by contradiction /* from formulas */
              qed
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.34 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.36 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.29 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.39 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* from formulas */
                    next
                      case split_case_3
                      by contradiction /* cyclic */
                    next
                      case split_case_4
                      by contradiction /* from formulas */
                    next
                      case split_case_5
                      by contradiction /* cyclic */
                    next
                      case split_case_6
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.17 )
            case Server_Hello
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case Server_Hello
                by solve( splitEqs(1) )
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_4
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_6
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.24 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.34 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.11 )
            case Server_Hello
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case Server_Hello
                by solve( splitEqs(1) )
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_4
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_6
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.29 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.24 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.34 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.11 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.15 )
              case Server_Hello
              solve( splitEqs(5) )
                case split
                by contradiction /* from formulas */
              qed
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.23 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.25 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.18 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.18 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.28 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.24 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.24 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* from formulas */
                    next
                      case split_case_3
                      by contradiction /* cyclic */
                    next
                      case split_case_4
                      by contradiction /* from formulas */
                    next
                      case split_case_5
                      by contradiction /* cyclic */
                    next
                      case split_case_6
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_4
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.17 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.18 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.18 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.28 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.24 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_5
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.17 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.18 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.18 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.28 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.24 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_6
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.17 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.11 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.18 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.18 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.28 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.24 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case OTEE_Client_Hello_case_3
    solve( splitEqs(0) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      by contradiction /* from formulas */
    next
      case split_case_3
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.21 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.27 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.35 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.37 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.30 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.30 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.40 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.23 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.31 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.33 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.26 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.36 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.23 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.34 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.36 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.29 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.39 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.30 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.25 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.25 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.35 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case Server_Hello
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case Server_Hello
                by solve( splitEqs(1) )
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.27 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_4
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_6
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.20 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.30 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case Server_Hello
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case Server_Hello
                by solve( splitEqs(1) )
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_4
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_6
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.23 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.33 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_4
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.21 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.25 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.25 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.35 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.20 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.30 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.33 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_5
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.21 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.25 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.25 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.35 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.20 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.30 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.33 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_6
      solve( OTEEIn( $OTEE,
                     <~ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.21 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.25 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.25 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.35 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.20 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.30 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.33 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case OTEE_Client_Hello_case_3
  solve( OTEE_0( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, pk(x.1)
         ) ▶₀ #j )
    case OTEE_Client_Hello_case_1
    solve( splitEqs(0) )
      case split
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(~x_1*~x_0.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^~x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                        ~ltk)
                                  >),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.40 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.25 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.25 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.35 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^~x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                        ~ltk)
                                  >),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.36 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.20 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.30 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^~x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                        ~ltk)
                                  >),
                             derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.39 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(~x_1*~x_0.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_1*~x_0.1), 's_hs_traffic'))
                     ) @ #vk.23 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^~x_1>)>,
                                 ~ltk)
                       ) @ #vk.33 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case OTEE_Client_Hello_case_2
    solve( splitEqs(0) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      by contradiction /* from formulas */
    next
      case split_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.27 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.35 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.37 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.30 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.30 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.40 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.18 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.30 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.25 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.25 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.35 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.23 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.31 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.33 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.26 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.36 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case Server_Hello
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case Server_Hello
                by solve( splitEqs(1) )
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.27 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_4
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_6
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.17 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.25 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.20 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.30 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.26 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.34 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.36 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.29 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.39 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case Server_Hello
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case Server_Hello
                by solve( splitEqs(1) )
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_3
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_4
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_6
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                    ~ltk),
                               derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                 ~ltk)
                       ) @ #vk.28 )
                  case c_sign
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.23 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.23 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.33 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_4
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.25 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.25 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.35 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.20 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.30 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.23 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.33 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_5
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.25 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.25 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.35 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.20 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.30 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.23 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.33 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_6
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.18 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.25 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.25 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.35 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.31 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.20 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.20 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.30 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.26 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <~ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.13 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.23 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.33 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.29 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case OTEE_Client_Hello_case_3
    solve( splitEqs(0) )
      case split_case_1
      by contradiction /* from formulas */
    next
      case split_case_2
      by contradiction /* from formulas */
    next
      case split_case_3
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^x_1,
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)
                                >,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>, h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>, x)
                                >),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.21 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.26 )
              case Server_Hello
              solve( splitEqs(1) )
                case split
                by contradiction /* from formulas */
              qed
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.34 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.36 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.30 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.30 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.40 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* from formulas */
                    next
                      case split_case_3
                      by contradiction /* cyclic */
                    next
                      case split_case_4
                      by contradiction /* from formulas */
                    next
                      case split_case_5
                      by contradiction /* cyclic */
                    next
                      case split_case_6
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.30 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.26 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.36 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.33 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.29 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.39 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.15 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.22 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.30 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.26 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.36 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.17 )
              case Server_Hello
              solve( splitEqs(1) )
                case split
                by contradiction /* from formulas */
              qed
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.25 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.27 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.21 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.31 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.27 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.27 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* from formulas */
                    next
                      case split_case_3
                      by contradiction /* cyclic */
                    next
                      case split_case_4
                      by contradiction /* from formulas */
                    next
                      case split_case_5
                      by contradiction /* cyclic */
                    next
                      case split_case_6
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.17 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.28 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.24 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.34 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1.1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                  x.1),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(~x_0*x_1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                        x.1)
                                  >),
                             derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.15 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.25 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.33 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.29 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.39 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.20 )
              case Server_Hello
              by solve( splitEqs(1) )
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.28 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.24 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.34 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* cyclic */
                    next
                      case split_case_3
                      by contradiction /* from formulas */
                    next
                      case split_case_4
                      by contradiction /* cyclic */
                    next
                      case split_case_5
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                                x),
                           derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case Server_Hello
            solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                                  ~ltk),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.20 )
              case Server_Hello
              solve( splitEqs(1) )
                case split
                by contradiction /* from formulas */
              qed
            next
              case c_senc
              solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>,
                                h3(<~u.1, 'g'^~x_0.1, n_1, 'g'^~x_1.1>)>,
                               ~ltk)
                     ) @ #vk.31 )
                case Server_Hello
                solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.33 )
                  case c_derive_secret
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^x_1>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^x_1>)>,
                             x)
                   ) @ #vk.27 )
              case Server_Hello
              by contradiction /* from formulas */
            next
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                    x.1),
                               derive_secret('g'^(~x_0*x_1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case Server_Hello
                by contradiction /* from formulas */
              next
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1.1>)>,
                                 x.1)
                       ) @ #vk.37 )
                  case Server_Hello
                  solve( !KU( derive_secret('g'^(~x_0*~x_1), 's_hs_traffic') ) @ #vk.33 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( derive_secret('g'^(~x_0*x_1), 's_hs_traffic') ) @ #vk.33 )
                    case c_derive_secret
                    solve( splitEqs(1) )
                      case split_case_1
                      by contradiction /* from formulas */
                    next
                      case split_case_2
                      by contradiction /* from formulas */
                    next
                      case split_case_3
                      by contradiction /* cyclic */
                    next
                      case split_case_4
                      by contradiction /* from formulas */
                    next
                      case split_case_5
                      by contradiction /* cyclic */
                    next
                      case split_case_6
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_4
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^(x.1*inv(~x_0)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                      x)
                                >),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.21 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.15 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.21 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.31 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.27 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, X_1_2,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                  x.2),
                             derive_secret('g'^x.1, 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^x.1, 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^x.1, 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.15 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                                x),
                           derive_secret('g'^x.1, 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv(~x_0))>)>,
                             x)
                   ) @ #vk.27 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                    x.2),
                               derive_secret('g'^x.1, 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, X_1_2>)>,
                                 x.2)
                       ) @ #vk.37 )
                  case c_sign
                  solve( !KU( derive_secret('g'^x.1, 's_hs_traffic') ) @ #vk.33 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_5
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1, 'g'^inv((~x_0*x.1)),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                      x)
                                >),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.21 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.15 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.21 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.31 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.27 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1,
                        'g'^inv((~x_0.1*x.1)),
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                  x.2),
                             derive_secret('g'^inv(x.1), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^inv(x.1), 's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                        x.2)
                                  >),
                             derive_secret('g'^inv(x.1), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.15 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                                x),
                           derive_secret('g'^inv(x.1), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^inv((~x_0*x.1))>)>,
                             x)
                   ) @ #vk.27 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                    x.2),
                               derive_secret('g'^inv(x.1), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^inv((~x_0.1*x.1))>)>,
                                 x.2)
                       ) @ #vk.37 )
                  case c_sign
                  solve( !KU( derive_secret('g'^inv(x.1), 's_hs_traffic') ) @ #vk.33 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case split_case_6
      solve( OTEEIn( $OTEE,
                     <ctid, ~tee_id, 'device_forward_server_hello', n_1,
                      'g'^(x.1*inv((~x_0*x.2))),
                      senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                      senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                            's_hs_traffic'),
                                              'finished'),
                                <<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                       h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                      x)
                                >),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     >
             ) ▶₁ #i )
        case AdversaryWriteToOTEE
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.21 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.30 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.30 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.40 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.36 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.19 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_1
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.15 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.26 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.26 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.36 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.32 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.21 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.31 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.27 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.21 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case DeviceOTEEChannel_case_2
        solve( OTEEIn( $OTEE.1,
                       <ctid.1, ~tee_id.1, 'device_forward_server_hello', n_1.1, 'g'^x_1,
                        senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                  x.3),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')),
                        senc(hmac(derive_secret(derive_secret('g'^(x.1*inv(x.2)),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                   sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                         h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                        x.3)
                                  >),
                             derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                       >
               ) ▶₁ #j )
          case AdversaryWriteToOTEE
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.15 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.29 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.29 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.39 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.35 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_1
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.24 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.34 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.30 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        next
          case DeviceOTEEChannel_case_2
          solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                                 h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                                x),
                           derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                 ) @ #vk.14 )
            case c_senc
            solve( !KU( sign(<<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>,
                              h3(<~u, 'g'^~x_0, n_1, 'g'^(x.1*inv((~x_0*x.2)))>)>,
                             x)
                   ) @ #vk.27 )
              case c_sign
              solve( !KU( senc(sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                     h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                    x.3),
                               derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic'))
                     ) @ #vk.24 )
                case c_senc
                solve( !KU( sign(<<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>,
                                  h3(<~u.1, 'g'^~x_0.1, n_1.1, 'g'^x_1>)>,
                                 x.3)
                       ) @ #vk.37 )
                  case c_sign
                  solve( !KU( derive_secret('g'^(x.1*inv(x.2)), 's_hs_traffic')
                         ) @ #vk.33 )
                    case c_derive_secret
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma adversaryCannotLearnoTEEDHShareBeforeOTEEStarts [reuse]:
  all-traces
  "∀ OTEE D x_0 #i #j.
    (((OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (!KU( x_0 ) @ #j)) ∧ (#j < #i)) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE D x_0 #i #j.
  (OTEEHelloDH( OTEE, D, x_0 ) @ #i) ∧ (!KU( x_0 ) @ #j) ∧ #j < #i"
*/
simplify
by contradiction /* cyclic */

lemma adversaryCannotKnowMeasurementPositionBeforeMeasurement [reuse]:
  all-traces
  "∀ OTEE ch_pos TA #i #j.
    ((OTEEPosition( OTEE, ch_pos ) @ #i) ∧
     (ThreatActorMeasurementSelection( TA, ch_pos ) @ #j)) ⇒
    (¬(∃ #k. (!KU( ch_pos ) @ #k) ∧ (#k < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE ch_pos TA #i #j.
  (OTEEPosition( OTEE, ch_pos ) @ #i) ∧
  (ThreatActorMeasurementSelection( TA, ch_pos ) @ #j)
 ∧
  ∃ #k. (!KU( ch_pos ) @ #k) ∧ #k < #i"
*/
simplify
solve( Threat_Actor_0( $TA, ~prop, $A, ~ltk ) ▶₀ #j )
  case Threat_Actor_Create_Agent
  solve( OTEEPosition( OTEE, select(z.1) ) @ #i )
    case Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, z,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.8 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.13 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.15 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_2
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.8 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.16 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.18 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_3
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.13 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.18 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.20 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_4
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.13 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.21 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.23 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_5
      solve( Threat_Actor_0( $TA, ~prop.2, $A.2, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.14 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.19 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.21 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_6
      solve( Threat_Actor_0( $TA, ~prop.2, $A.2, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.14 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.22 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.24 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_7
      solve( Threat_Actor_0( $TA, ~prop.1, $A.1, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.15 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.23 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_1
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_2
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case Interrupt_OTEE_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.25 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_1
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_2
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case Continue_OTEE_Interrupt_With_Agent_case_1
                by contradiction /* cyclic */
              next
                case Continue_OTEE_Interrupt_With_Agent_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  next
    case No_Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, z,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      solve( Threat_Actor_0( $TA, ~prop.3, $A.4, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.8 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.13 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.15 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_2
      solve( Threat_Actor_0( $TA, ~prop.3, $A.4, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.8 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.16 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.18 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_3
      solve( Threat_Actor_0( $TA, ~prop.3, $A.4, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.13 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.18 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.20 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_4
      solve( Threat_Actor_0( $TA, ~prop.3, $A.4, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.13 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.21 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.23 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_5
      solve( Threat_Actor_0( $TA, ~prop.3, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.14 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.19 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.21 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_6
      solve( Threat_Actor_0( $TA, ~prop.3, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.14 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.22 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.24 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_7
      solve( Threat_Actor_0( $TA, ~prop.2, $A.2, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.15 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.23 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_1
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_2
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_OTEE_Memory_Read_case_1
            by contradiction /* cyclic */
          next
            case No_Interrupt_OTEE_Memory_Read_case_2
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.25 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_1
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_2
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_OTEE_Memory_Read_case_1
                by contradiction /* cyclic */
              next
                case No_Interrupt_OTEE_Memory_Read_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  next
    case No_Interrupt_Prepared_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, z,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.9 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.14 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.16 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_2
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.9 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.17 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.19 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_3
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.14 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.19 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.21 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_4
      solve( Threat_Actor_0( $TA, ~prop.2, $A.3, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.14 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.22 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.24 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_5
      solve( Threat_Actor_0( $TA, ~prop.2, $A.2, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.15 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.20 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.22 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_6
      solve( Threat_Actor_0( $TA, ~prop.2, $A.2, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.15 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.23 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.25 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case OTEE_Receive_Server_Hello_case_7
      solve( Threat_Actor_0( $TA, ~prop.1, $A.1, ~ltk.2 ) ▶₀ #k )
        case Threat_Actor_Create_Agent
        solve( !KU( senc(sign(<<~u, 'g'^~x_0, n_1, 'g'^~x_1>,
                               h3(<~u, 'g'^~x_0, n_1, 'g'^~x_1>)>,
                              ~ltk),
                         derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
               ) @ #vk.16 )
          case Server_Hello
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.24 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_1
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_2
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( select('g'^(~x_0*~x_1)) ) @ #k.1 )
            case No_Interrupt_Prepared_Memory_Read
            by contradiction /* cyclic */
          next
            case c_select
            solve( !KU( 'g'^(~x_0*~x_1) ) @ #vk.26 )
              case AdversaryReadOTEEOut
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_1
              by contradiction /* from formulas */
            next
              case Device_Forward_OTEE_Client_Hello_case_2
              by contradiction /* from formulas */
            next
              case Server_Hello
              solve( OTEE_3( ~tee_id.1, ctid.1, $OTEE, $D, ~u, ~x_0, n_1.1, X_1, DHE,
                             c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                             int_indicator
                     ) ▶₀ #k.2 )
                case No_Interrupt_Prepared_Memory_Read
                by contradiction /* cyclic */
              qed
            next
              case c_exp
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma TheMeasurementPositionIsUnique [reuse]:
  all-traces
  "∀ OTEE OTEE2 ch_pos #i #j.
    (((OTEEPosition( OTEE, ch_pos ) @ #i) ∧
      (OTEEPosition( OTEE2, ch_pos ) @ #j)) ∧
     (¬(#i = #j))) ⇒
    (⊥)"
/*
guarded formula characterizing all counter-examples:
"∃ OTEE OTEE2 ch_pos #i #j.
  (OTEEPosition( OTEE, ch_pos ) @ #i) ∧
  (OTEEPosition( OTEE2, ch_pos ) @ #j)
 ∧
  ¬(#i = #j)"
*/
simplify
solve( OTEEPosition( OTEE, ch_pos ) @ #i )
  case Interrupt_OTEE_Memory_Read
  solve( OTEEPosition( OTEE2, select(DHE) ) @ #j.1 )
    case Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_2
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_3
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_4
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_5
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_6
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_7
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    qed
  next
    case No_Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_2
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_3
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_4
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_5
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_6
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_7
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    qed
  next
    case No_Interrupt_Prepared_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_2
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_3
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_4
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_5
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_6
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_7
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    qed
  qed
next
  case No_Interrupt_OTEE_Memory_Read
  solve( OTEEPosition( OTEE2, select(DHE) ) @ #j )
    case Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_2
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_3
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_4
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_5
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_6
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_7
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    qed
  next
    case No_Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_2
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_3
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_4
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_5
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_6
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_7
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    qed
  next
    case No_Interrupt_Prepared_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_2
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_3
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_4
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_5
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_6
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    next
      case OTEE_Receive_Server_Hello_case_7
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j )
    qed
  qed
next
  case No_Interrupt_Prepared_Memory_Read
  solve( OTEEPosition( OTEE2, select(DHE) ) @ #j.1 )
    case Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_2
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_3
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_4
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_5
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_6
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_7
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    qed
  next
    case No_Interrupt_OTEE_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_2
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_3
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_4
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_5
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_6
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    next
      case OTEE_Receive_Server_Hello_case_7
      by solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                        X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
                ) ▶₀ #j.1 )
    qed
  next
    case No_Interrupt_Prepared_Memory_Read
    solve( OTEE_2( ~tee_id, ctid, $OTEE, $D, ~u, ~x_0, n_1, X_1, DHE,
                   c_hs_traffic_s, c_finish_k, c_ap_traffic_s
           ) ▶₀ #i )
      case OTEE_Receive_Server_Hello_case_1
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_2
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_3
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_4
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_5
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1, 'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_6
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    next
      case OTEE_Receive_Server_Hello_case_7
      solve( OTEE_2( ~tee_id.1, ctid.1, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1.1,
                     X_1.1, DHE, c_hs_traffic_s, c_finish_k, c_ap_traffic_s
             ) ▶₀ #j.1 )
        case OTEE_Receive_Server_Hello
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma acceptedVerificationOnlyIfCorrectOTEEWasRunning [reuse]:
  all-traces
  "∀ TA OTEE A prop DHE #i.
    ((AcceptVerificationWithAgent( TA, OTEE, A, prop ) @ #i) ∧
     (AcceptVerificationDHE( TA, DHE ) @ #i)) ⇒
    (¬(∃ OTEE2 NO D #j #k.
        ((OTEERegisteredOnDevice( NO, OTEE2, D ) @ #j) ∧
         (OTEEChallengeResponseDHE( OTEE2, DHE ) @ #k)) ∧
        (¬(OTEE = OTEE2))))"
/*
guarded formula characterizing all counter-examples:
"∃ TA OTEE A prop DHE #i.
  (AcceptVerificationWithAgent( TA, OTEE, A, prop ) @ #i) ∧
  (AcceptVerificationDHE( TA, DHE ) @ #i)
 ∧
  ∃ OTEE2 NO D #j #k.
   (OTEERegisteredOnDevice( NO, OTEE2, D ) @ #j) ∧
   (OTEEChallengeResponseDHE( OTEE2, DHE ) @ #k)
  ∧
   ¬(OTEE = OTEE2)"
*/
simplify
solve( !NO_Ltk( $NO.1, NO_ltk ) ▶₁ #j )
  case NO_Init
  solve( !NO_Pk( $NO, pk(x.1) ) ▶₂ #i )
    case NO_Init
    solve( Threat_Actor_1( $TA, ~prop, ~s, $A, ~ltk, u, X_0, n_1, ~x_1,
                           client_handshake_traffic_secret, client_finished_key,
                           client_application_traffic_secret
           ) ▶₀ #i )
      case Server_Hello
      solve( !KU( senc(<y, my_g2(~s, y),
                        sign(<y, my_g2(~s, y), OTEE,
                              hmac(derive_secret(derive_secret(z, 'c_hs_traffic'), 'finished'),
                                   <<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>,
                                    h3(<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>)>)
                             >,
                             x),
                        OTEE>,
                       derive_secret(derive_secret(z, 'derived'), 'c_ap_traffic'))
             ) @ #vk.3 )
        case AdversaryReadOTEEOut_case_01
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_02
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_03
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_04
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_05
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_06
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_07
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_08
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_09
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_10
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_11
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_12
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_13
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_14
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_15
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_16
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_17
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_18
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_19
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_20
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case AdversaryReadOTEEOut_case_21
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_01
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_02
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_03
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_04
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_05
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_06
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_07
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_08
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_09
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_10
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_11
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_12
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_13
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_14
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_15
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_16
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_OTEE_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_17
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_18
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_19
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_20
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_21
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_22
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_23
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case Device_Finished_case_24
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0.1, n_1, X_1,
                       'g'^(~x_0*~x_1), c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos,
                       ch_prop, int_indicator
               ) ▶₀ #k )
          case No_Interrupt_Prepared_Memory_Read
          by contradiction /* from formulas */
        qed
      next
        case c_senc
        solve( OTEE_3( ~tee_id, ctid, $OTEE.1, $D.1, ~u.1, ~x_0, n_1, X_1, DHE,
                       c_hs_traffic_s, c_finish_k, c_ap_traffic_s, ch_pos, ch_prop,
                       int_indicator
               ) ▶₀ #k )
          case Continue_OTEE_Interrupt_With_Agent_case_01
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.28 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.31 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_02
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_03
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.36 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.36 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_04
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_05
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.31 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_06
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_07
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_08
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.42 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.42 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_09
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_10
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_11
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.41 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.41 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_12
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_13
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.43 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.43 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case Continue_OTEE_Interrupt_With_Agent_case_14
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.44 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.44 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_01
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.28 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.31 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_02
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_03
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.31 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_04
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_05
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.36 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.36 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_06
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_07
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.39 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_08
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.42 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.42 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_09
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.34 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_10
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_11
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_12
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.43 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.43 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_13
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished_case_1
                by contradiction /* from formulas */
              next
                case Device_Finished_case_2
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.41 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.41 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_OTEE_Memory_Read_case_14
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished_case_1
                by contradiction /* from formulas */
              next
                case Device_Finished_case_2
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.44 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.44 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_Prepared_Memory_Read_case_1
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.29 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.32 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_Prepared_Memory_Read_case_2
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.35 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.35 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_Prepared_Memory_Read_case_3
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.37 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_Prepared_Memory_Read_case_4
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.40 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_Prepared_Memory_Read_case_5
          solve( !KU( sign(<OTEE, pk(x.1)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <client_nonce, 'g'^~x_0,
                                       v(~s,
                                         <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<client_nonce, 'g'^~x_0,
                                          v(~s,
                                            <client_nonce, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))
                                            >),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.35 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.38 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_Prepared_Memory_Read_case_6
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.41 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.41 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        next
          case No_Interrupt_Prepared_Memory_Read_case_7
          solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
            case NO_Register_OTEE_On_Device
            solve( splitEqs(0) )
              case split_case_1
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^~x, v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>),
                                       'g'^~x_1>,
                                      h3(<u, 'g'^~x,
                                          v(~s, <u, h2('0', measure(select('g'^(~x*~x_1)), ~prop))>), 'g'^~x_1
                                         >)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case AdversaryReadOTEEOut
                by contradiction /* from formulas */
              next
                case Device_Finished_case_1
                by contradiction /* from formulas */
              next
                case Device_Finished_case_2
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.42 )
              qed
            next
              case split_case_2
              solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                       v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                       'g'^~x_1.1>,
                                      h3(<u, 'g'^(~x_0*~x_1*inv(~x_1.1)),
                                          v(~s, <u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1.1>)
                                     >)
                               >,
                               ~OTEE_ltk)
                     ) @ #vk.16 )
                case c_sign
                by solve( !KU( ~OTEE_ltk ) @ #vk.42 )
              qed
            qed
          next
            case c_sign
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed

lemma token_integrity:
  all-traces
  "∀ TA OTEE #i.
    (AcceptVerification( TA, OTEE ) @ #i) ⇒
    (∃ D NO #j. (OTEERegisteredOnDevice( NO, OTEE, D ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ TA OTEE #i.
  (AcceptVerification( TA, OTEE ) @ #i)
 ∧
  ∀ D NO #j. (OTEERegisteredOnDevice( NO, OTEE, D ) @ #j) ⇒ ¬(#j < #i)"
*/
simplify
solve( !NO_Pk( $NO, pk(x.1) ) ▶₂ #i )
  case NO_Init
  solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
    case NO_Register_OTEE_On_Device
    by contradiction /* from formulas */
  next
    case c_sign
    by contradiction /* from formulas */
  qed
qed

lemma binding_integrity:
  all-traces
  "∀ TA OTEE A prop #i.
    (AcceptVerificationWithAgent( TA, OTEE, A, prop ) @ #i) ⇒
    (∃ NO D #j #k #l.
      ((OTEERegisteredOnDevice( NO, OTEE, D ) @ #j) ∧
       (OTEEHonestPropertyRead( OTEE, D, A, prop ) @ #k)) ∧
      (ThreatActorCreateAgent( TA, A, prop ) @ #l))"
/*
guarded formula characterizing all counter-examples:
"∃ TA OTEE A prop #i.
  (AcceptVerificationWithAgent( TA, OTEE, A, prop ) @ #i)
 ∧
  ∀ NO D #j #k #l.
   (OTEERegisteredOnDevice( NO, OTEE, D ) @ #j) ∧
   (OTEEHonestPropertyRead( OTEE, D, A, prop ) @ #k) ∧
   (ThreatActorCreateAgent( TA, A, prop ) @ #l)
  ⇒
   ⊥"
*/
simplify
solve( Threat_Actor_1( $TA, ~prop, ~s, $A, ~ltk, u, X_0, n_1, ~x_1,
                       client_handshake_traffic_secret, client_finished_key,
                       client_application_traffic_secret
       ) ▶₀ #i )
  case Server_Hello
  solve( !NO_Pk( $NO, pk(x.1) ) ▶₂ #i )
    case NO_Init
    solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
      case NO_Register_OTEE_On_Device
      solve( !KU( pk(~OTEE_ltk) ) @ #vk.6 )
        case NO_Register_OTEE_On_Device
        solve( !KU( senc(<y, my_g2(~s, y),
                          sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret(z, 'c_hs_traffic'), 'finished'),
                                     <<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>,
                                      h3(<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>)>)
                               >,
                               ~OTEE_ltk),
                          $OTEE>,
                         derive_secret(derive_secret(z, 'derived'), 'c_ap_traffic'))
               ) @ #vk.6 )
          case AdversaryReadOTEEOut_case_01
          by contradiction /* from formulas */
        next
          case AdversaryReadOTEEOut_case_02
          by contradiction /* from formulas */
        next
          case AdversaryReadOTEEOut_case_03
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.18 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.18 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.18 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_04
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.18 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.18 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.18 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_05
          by contradiction /* from formulas */
        next
          case AdversaryReadOTEEOut_case_06
          by contradiction /* from formulas */
        next
          case AdversaryReadOTEEOut_case_07
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.23 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.23 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.23 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_08
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.23 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.23 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.23 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_09
          by contradiction /* from formulas */
        next
          case AdversaryReadOTEEOut_case_10
          by contradiction /* from formulas */
        next
          case AdversaryReadOTEEOut_case_11
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.24 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.24 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.24 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_12
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.24 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.24 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.24 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_13
          by contradiction /* from formulas */
        next
          case AdversaryReadOTEEOut_case_14
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.28 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.28 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.28 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_15
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.10 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.10 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_16
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.10 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.10 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_17
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.10 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.10 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_18
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.10 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.10 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_19
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.10 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.10 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_20
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.10 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.10 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case AdversaryReadOTEEOut_case_21
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.10 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.10 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.10 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_01
          by contradiction /* from formulas */
        next
          case Device_Finished_case_02
          by contradiction /* from formulas */
        next
          case Device_Finished_case_03
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.25 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.25 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.25 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_04
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.25 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.25 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.25 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_05
          by contradiction /* from formulas */
        next
          case Device_Finished_case_06
          by contradiction /* from formulas */
        next
          case Device_Finished_case_07
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.30 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.30 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.30 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_08
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.30 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.30 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.30 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_09
          by contradiction /* from formulas */
        next
          case Device_Finished_case_10
          by contradiction /* from formulas */
        next
          case Device_Finished_case_11
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.31 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.31 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.31 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_12
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.31 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.31 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.31 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_13
          by contradiction /* from formulas */
        next
          case Device_Finished_case_14
          by contradiction /* from formulas */
        next
          case Device_Finished_case_15
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.35 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.35 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.35 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_16
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.35 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.35 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.35 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_17
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_18
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_19
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_20
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_21
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_22
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_23
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case Device_Finished_case_24
          solve( splitEqs(2) )
            case split_case_1
            by solve( !KU( ~prop ) @ #vk.17 )
          next
            case split_case_2
            solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_measure
              by contradiction /* from formulas */
            qed
          next
            case split_case_3
            solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.17 )
              case Adversary_Extract_Agent_Properties
              by contradiction /* from formulas */
            next
              case c_read
              by contradiction /* from formulas */
            qed
          next
            case split_case_4
            solve( !KU( read(select('g'^(~x_0*~x_1)),
                             measure(select('g'^(~x_0*~x_1)), ~prop))
                   ) @ #vk.17 )
              case c_read
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( sign(<y, my_g2(~s, y), $OTEE,
                            hmac(derive_secret(derive_secret(z, 'c_hs_traffic'), 'finished'),
                                 <<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>,
                                  h3(<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>)>)
                           >,
                           ~OTEE_ltk)
                 ) @ #vk.16 )
            case AdversaryReadOTEEOut_case_01
            by contradiction /* from formulas */
          next
            case AdversaryReadOTEEOut_case_02
            by contradiction /* from formulas */
          next
            case AdversaryReadOTEEOut_case_03
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.27 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.27 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.27 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_04
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.27 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.27 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.27 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_05
            by contradiction /* from formulas */
          next
            case AdversaryReadOTEEOut_case_06
            by contradiction /* from formulas */
          next
            case AdversaryReadOTEEOut_case_07
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.32 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.32 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.32 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_08
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.32 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.32 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.32 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_09
            by contradiction /* from formulas */
          next
            case AdversaryReadOTEEOut_case_10
            by contradiction /* from formulas */
          next
            case AdversaryReadOTEEOut_case_11
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.33 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.33 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.33 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_12
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.33 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.33 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.33 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_13
            by contradiction /* from formulas */
          next
            case AdversaryReadOTEEOut_case_14
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.37 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.37 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.37 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_15
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.19 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.19 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_16
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.19 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.19 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_17
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.19 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.19 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_18
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.19 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.19 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_19
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.19 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.19 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_20
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.19 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.19 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case AdversaryReadOTEEOut_case_21
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.19 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.19 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.19 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_01
            by contradiction /* from formulas */
          next
            case Device_Finished_case_02
            by contradiction /* from formulas */
          next
            case Device_Finished_case_03
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.34 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.34 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.34 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_04
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.34 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.34 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.34 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_05
            by contradiction /* from formulas */
          next
            case Device_Finished_case_06
            by contradiction /* from formulas */
          next
            case Device_Finished_case_07
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.39 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.39 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.39 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_08
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.39 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.39 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.39 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_09
            by contradiction /* from formulas */
          next
            case Device_Finished_case_10
            by contradiction /* from formulas */
          next
            case Device_Finished_case_11
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.40 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.40 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.40 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_12
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.40 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.40 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.40 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_13
            by contradiction /* from formulas */
          next
            case Device_Finished_case_14
            by contradiction /* from formulas */
          next
            case Device_Finished_case_15
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.44 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.44 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.44 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_16
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.44 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.44 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.44 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_17
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_18
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_19
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_20
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_21
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_22
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_23
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case Device_Finished_case_24
            solve( splitEqs(2) )
              case split_case_1
              by solve( !KU( ~prop ) @ #vk.26 )
            next
              case split_case_2
              solve( !KU( measure(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_measure
                by contradiction /* from formulas */
              qed
            next
              case split_case_3
              solve( !KU( read(select('g'^(~x_0*~x_1)), ~prop) ) @ #vk.26 )
                case Adversary_Extract_Agent_Properties
                by contradiction /* from formulas */
              next
                case c_read
                by contradiction /* from formulas */
              qed
            next
              case split_case_4
              solve( !KU( read(select('g'^(~x_0*~x_1)),
                               measure(select('g'^(~x_0*~x_1)), ~prop))
                     ) @ #vk.26 )
                case c_read
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            by solve( !KU( ~OTEE_ltk ) @ #vk.21 )
          qed
        qed
      next
        case c_pk
        by solve( !KU( ~OTEE_ltk ) @ #vk.10 )
      qed
    next
      case c_sign
      by contradiction /* from formulas */
    qed
  qed
qed

lemma executable_simple:
  exists-trace
  "∃ TA OTEE A prop NO #i #j.
    (((AcceptVerificationWithAgent( TA, OTEE, A, prop ) @ #i) ∧
      (InitializeNO( NO ) @ #j)) ∧
     (∀ D #r2. (OSCompromise( D ) @ #r2) ⇒ (⊥))) ∧
    (∀ NO2 #j2. (InitializeNO( NO2 ) @ #j2) ⇒ (#j = #j2))"
/*
guarded formula characterizing all satisfying traces:
"∃ TA OTEE A prop NO #i #j.
  (AcceptVerificationWithAgent( TA, OTEE, A, prop ) @ #i) ∧
  (InitializeNO( NO ) @ #j)
 ∧
  (∀ D #r2. (OSCompromise( D ) @ #r2) ⇒ ⊥) ∧
  (∀ NO2 #j2. (InitializeNO( NO2 ) @ #j2) ⇒ #j = #j2)"
*/
simplify
solve( Threat_Actor_1( $TA, ~prop, ~s, $A, ~ltk, u, X_0, n_1, ~x_1,
                       client_handshake_traffic_secret, client_finished_key,
                       client_application_traffic_secret
       ) ▶₀ #i )
  case Server_Hello
  solve( !NO_Pk( $NO, pk(x.1) ) ▶₂ #i )
    case NO_Init
    solve( !KU( sign(<OTEE, pk(x)>, ~ltk.1) ) @ #vk.6 )
      case NO_Register_OTEE_On_Device
      solve( !KU( senc(hmac(derive_secret(derive_secret(z, 'c_hs_traffic'),
                                          'finished'),
                            <<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>,
                             h3(<u, X_0, v(~s, <u, h2('0', measure(select(z), ~prop))>), 'g'^~x_1>)>),
                       derive_secret(z, 'c_hs_traffic'))
             ) @ #vk.2 )
        case Device_Finished_case_01
        solve( !KU( senc(<y, my_g2(~s, y),
                          sign(<y, my_g2(~s, y), $OTEE,
                                hmac(derive_secret(derive_secret('g'^(~x_0*~x_1), 'c_hs_traffic'),
                                                   'finished'),
                                     <
                                      <~u, 'g'^~x_0,
                                       v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>), 'g'^~x_1
                                      >,
                                      h3(<~u, 'g'^~x_0,
                                          v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1>)
                                     >)
                               >,
                               ~OTEE_ltk),
                          $OTEE>,
                         derive_secret(derive_secret('g'^(~x_0*~x_1), 'derived'), 'c_ap_traffic'))
               ) @ #vk.5 )
          case Device_Finished
          solve( !KU( senc(sign(<
                                 <~u, 'g'^~x_0,
                                  v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>), 'g'^~x_1
                                 >,
                                 h3(<~u, 'g'^~x_0,
                                     v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>), 'g'^~x_1>)
                                >,
                                ~ltk),
                           derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                 ) @ #vk.22 )
            case Server_Hello
            solve( !KU( senc(hmac(derive_secret(derive_secret('g'^(~x_0*~x_1),
                                                              's_hs_traffic'),
                                                'finished'),
                                  <
                                   <~u, 'g'^~x_0,
                                    v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>), 'g'^~x_1
                                   >,
                                   sign(<
                                         <~u, 'g'^~x_0,
                                          v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                          'g'^~x_1>,
                                         h3(<~u, 'g'^~x_0,
                                             v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>),
                                             'g'^~x_1>)
                                        >,
                                        ~ltk)
                                  >),
                             derive_secret('g'^(~x_0*~x_1), 's_hs_traffic'))
                   ) @ #vk.23 )
              case Server_Hello
              solve( !KU( pk(~OTEE_ltk) ) @ #vk.10 )
                case NO_Register_OTEE_On_Device
                solve( !KU( v(~s, <~u, h2('0', measure(select('g'^(~x_0*~x_1)), ~prop))>)
                       ) @ #vk.22 )
                  case Server_Hello
                  solve( !KU( 'g'^~x_1 ) @ #vk.23 )
                    case Server_Hello
                    solve( Device_2( ~ctid, ~tee_id, $D, $OTEE.1, ~agent_id, $A.1, server_pk
                           ) ▶₀ #vr.9 )
                      case Device_Forward_OTEE_Client_Hello_case_1
                      solve( Device_2( ~ctid, ~tee_id, $D, $OTEE.1, ~agent_id.2, $A.2,
                                       server_pk
                             ) ▶₀ #vr.19 )
                        case Device_Forward_OTEE_Client_Hello
                        solve( !KU( ~u ) @ #vk.15 )
                          case Device_Forward_OTEE_Client_Hello
                          solve( !KU( 'g'^~x_0 ) @ #vk.16 )
                            case Device_Forward_OTEE_Client_Hello
                            solve( (∃ #j. (!KU( 'g'^~x_1 ) @ #j))  ∥
                                   (∀ #j. (!KU( 'g'^(~x_0*~x_1) ) @ #j) ⇒ ¬(#j < #vr.13)) )
                              case case_1
                              SOLVED // trace found
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed























































/*
WARNING: the following wellformedness checks failed!

Derivation Checks
=================

  Derivation checks timed out. Use --derivcheck-timeout=INT to configure timeout, 0 to deactivate.
*/

/*
Generated from:
Tamarin version 1.8.0
Maude version 3.1
Git revision: f172d7f00b1485446a1e7a42dc14623c2189cc42, branch: master
Compiled at: 2023-08-31 10:43:56.765388839 UTC
*/

end
